#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace L2SDemo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="XCRM_14.2")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivityTarget(ActivityTarget instance);
    partial void UpdateActivityTarget(ActivityTarget instance);
    partial void DeleteActivityTarget(ActivityTarget instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertFileData(FileData instance);
    partial void UpdateFileData(FileData instance);
    partial void DeleteFileData(FileData instance);
    partial void InsertHCategory(HCategory instance);
    partial void UpdateHCategory(HCategory instance);
    partial void DeleteHCategory(HCategory instance);
    partial void InsertKpiDefinition(KpiDefinition instance);
    partial void UpdateKpiDefinition(KpiDefinition instance);
    partial void DeleteKpiDefinition(KpiDefinition instance);
    partial void InsertKpiHistoryItem(KpiHistoryItem instance);
    partial void UpdateKpiHistoryItem(KpiHistoryItem instance);
    partial void DeleteKpiHistoryItem(KpiHistoryItem instance);
    partial void InsertKpiInstanceKpiScorecard(KpiInstanceKpiScorecard instance);
    partial void UpdateKpiInstanceKpiScorecard(KpiInstanceKpiScorecard instance);
    partial void DeleteKpiInstanceKpiScorecard(KpiInstanceKpiScorecard instance);
    partial void InsertKpiInstance(KpiInstance instance);
    partial void UpdateKpiInstance(KpiInstance instance);
    partial void DeleteKpiInstance(KpiInstance instance);
    partial void InsertKpiScorecard(KpiScorecard instance);
    partial void UpdateKpiScorecard(KpiScorecard instance);
    partial void DeleteKpiScorecard(KpiScorecard instance);
    partial void InsertLeadHistoryRecord(LeadHistoryRecord instance);
    partial void UpdateLeadHistoryRecord(LeadHistoryRecord instance);
    partial void DeleteLeadHistoryRecord(LeadHistoryRecord instance);
    partial void InsertModuleInfoe(ModuleInfoe instance);
    partial void UpdateModuleInfoe(ModuleInfoe instance);
    partial void DeleteModuleInfoe(ModuleInfoe instance);
    partial void InsertNote(Note instance);
    partial void UpdateNote(Note instance);
    partial void DeleteNote(Note instance);
    partial void InsertPeople(People instance);
    partial void UpdatePeople(People instance);
    partial void DeletePeople(People instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertReportData(ReportData instance);
    partial void UpdateReportData(ReportData instance);
    partial void DeleteReportData(ReportData instance);
    partial void InsertResourceEvent(ResourceEvent instance);
    partial void UpdateResourceEvent(ResourceEvent instance);
    partial void DeleteResourceEvent(ResourceEvent instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertRoleRole(RoleRole instance);
    partial void UpdateRoleRole(RoleRole instance);
    partial void DeleteRoleRole(RoleRole instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSaleItem(SaleItem instance);
    partial void UpdateSaleItem(SaleItem instance);
    partial void DeleteSaleItem(SaleItem instance);
    partial void InsertSecuritySystemMemberPermissionsObject(SecuritySystemMemberPermissionsObject instance);
    partial void UpdateSecuritySystemMemberPermissionsObject(SecuritySystemMemberPermissionsObject instance);
    partial void DeleteSecuritySystemMemberPermissionsObject(SecuritySystemMemberPermissionsObject instance);
    partial void InsertSecuritySystemObjectPermissionsObject(SecuritySystemObjectPermissionsObject instance);
    partial void UpdateSecuritySystemObjectPermissionsObject(SecuritySystemObjectPermissionsObject instance);
    partial void DeleteSecuritySystemObjectPermissionsObject(SecuritySystemObjectPermissionsObject instance);
    partial void InsertTypePermissionObject(TypePermissionObject instance);
    partial void UpdateTypePermissionObject(TypePermissionObject instance);
    partial void DeleteTypePermissionObject(TypePermissionObject instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::L2SDemo.Properties.Settings.Default.XCRM_14_2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActivityTarget> ActivityTargets
		{
			get
			{
				return this.GetTable<ActivityTarget>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<FileData> FileDatas
		{
			get
			{
				return this.GetTable<FileData>();
			}
		}
		
		public System.Data.Linq.Table<HCategory> HCategories
		{
			get
			{
				return this.GetTable<HCategory>();
			}
		}
		
		public System.Data.Linq.Table<KpiDefinition> KpiDefinitions
		{
			get
			{
				return this.GetTable<KpiDefinition>();
			}
		}
		
		public System.Data.Linq.Table<KpiHistoryItem> KpiHistoryItems
		{
			get
			{
				return this.GetTable<KpiHistoryItem>();
			}
		}
		
		public System.Data.Linq.Table<KpiInstanceKpiScorecard> KpiInstanceKpiScorecards
		{
			get
			{
				return this.GetTable<KpiInstanceKpiScorecard>();
			}
		}
		
		public System.Data.Linq.Table<KpiInstance> KpiInstances
		{
			get
			{
				return this.GetTable<KpiInstance>();
			}
		}
		
		public System.Data.Linq.Table<KpiScorecard> KpiScorecards
		{
			get
			{
				return this.GetTable<KpiScorecard>();
			}
		}
		
		public System.Data.Linq.Table<LeadHistoryRecord> LeadHistoryRecords
		{
			get
			{
				return this.GetTable<LeadHistoryRecord>();
			}
		}
		
		public System.Data.Linq.Table<ModuleInfoe> ModuleInfoes
		{
			get
			{
				return this.GetTable<ModuleInfoe>();
			}
		}
		
		public System.Data.Linq.Table<Note> Notes
		{
			get
			{
				return this.GetTable<Note>();
			}
		}
		
		public System.Data.Linq.Table<People> Peoples
		{
			get
			{
				return this.GetTable<People>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ReportData> ReportDatas
		{
			get
			{
				return this.GetTable<ReportData>();
			}
		}
		
		public System.Data.Linq.Table<ResourceEvent> ResourceEvents
		{
			get
			{
				return this.GetTable<ResourceEvent>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<RoleRole> RoleRoles
		{
			get
			{
				return this.GetTable<RoleRole>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<SaleItem> SaleItems
		{
			get
			{
				return this.GetTable<SaleItem>();
			}
		}
		
		public System.Data.Linq.Table<SecuritySystemMemberPermissionsObject> SecuritySystemMemberPermissionsObjects
		{
			get
			{
				return this.GetTable<SecuritySystemMemberPermissionsObject>();
			}
		}
		
		public System.Data.Linq.Table<SecuritySystemObjectPermissionsObject> SecuritySystemObjectPermissionsObjects
		{
			get
			{
				return this.GetTable<SecuritySystemObjectPermissionsObject>();
			}
		}
		
		public System.Data.Linq.Table<TypePermissionObject> TypePermissionObjects
		{
			get
			{
				return this.GetTable<TypePermissionObject>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityTargets")]
	public partial class ActivityTarget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityTargetId;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _PreferredContactMethod;
		
		private System.Nullable<decimal> _CreditLimit;
		
		private System.Nullable<bool> _CreditHold;
		
		private string _AccountName;
		
		private string _WebSite;
		
		private string _NumberOfEmployees;
		
		private string _SICCode;
		
		private System.Nullable<decimal> _AnnualRevenue;
		
		private string _Email;
		
		private string _OtherPhone;
		
		private string _MobilePhone;
		
		private string _OfficePhone;
		
		private string _HomePhone;
		
		private string _Fax;
		
		private string _Name;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _DiscountPercent;
		
		private string _ID;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<int> _Status1;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<int> _Rating;
		
		private System.Nullable<int> _Status2;
		
		private System.Nullable<decimal> _EstimatedRevenue;
		
		private System.Nullable<decimal> _ActualRevenue;
		
		private System.Nullable<int> _Probability;
		
		private System.Nullable<System.DateTime> _CloseDate;
		
		private System.Nullable<System.DateTime> _EstimatedCloseDate;
		
		private System.Nullable<bool> _RevenueIsUserProvided;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private System.Nullable<int> _ShippingMethod;
		
		private System.Nullable<int> _Status3;
		
		private System.Nullable<System.DateTime> _CancelDate;
		
		private System.Nullable<int> _Status4;
		
		private System.Nullable<System.DateTime> _EffectiveTo;
		
		private System.Nullable<System.DateTime> _EffectiveFrom;
		
		private System.Nullable<System.DateTime> _DueBy;
		
		private System.Nullable<System.DateTime> _ClosedOn;
		
		private System.Nullable<System.DateTime> _DeliveryDate1;
		
		private System.Nullable<int> _ShippingMethod1;
		
		private string _Topic;
		
		private System.Nullable<int> _Status5;
		
		private System.Nullable<System.DateTime> _CreatedOn1;
		
		private string _CompanyName;
		
		private string _LastName;
		
		private string _FirstName;
		
		private System.Nullable<int> _LeadSource;
		
		private string _JobTitle;
		
		private string _WebSite1;
		
		private System.Nullable<decimal> _AnnualRevenue1;
		
		private string _NumberOfEmployees1;
		
		private string _SICCode1;
		
		private System.Nullable<int> _PreferredContactMethod1;
		
		private string _Email1;
		
		private string _OtherPhone1;
		
		private string _MobilePhone1;
		
		private string _OfficePhone1;
		
		private string _HomePhone1;
		
		private string _Fax1;
		
		private System.Nullable<System.DateTime> _DeliveryDate2;
		
		private System.Nullable<int> _ShippingMethod2;
		
		private System.Nullable<System.DateTime> _DeliveryDate3;
		
		private System.Nullable<int> _ShippingMethod3;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Email2;
		
		private string _OtherPhone2;
		
		private string _MobilePhone2;
		
		private string _OfficePhone2;
		
		private string _HomePhone2;
		
		private string _Fax2;
		
		private string _Discriminator;
		
		private System.Nullable<int> _Customer_ActivityTargetId;
		
		private System.Nullable<int> _Owner_ID;
		
		private System.Nullable<int> _PotentialCustomer_ActivityTargetId;
		
		private System.Nullable<int> _Customer_ActivityTargetId1;
		
		private System.Nullable<int> _BackRefOpportunity_ActivityTargetId;
		
		private System.Nullable<int> _BillToAddress_ID;
		
		private System.Nullable<int> _ShipToAddress_ID;
		
		private System.Nullable<int> _SourceOpportunity_ActivityTargetId;
		
		private System.Nullable<int> _BackRefCustomer_ActivityTargetId;
		
		private System.Nullable<int> _SourceOrder_ActivityTargetId;
		
		private System.Nullable<int> _Opportunity_ActivityTargetId;
		
		private System.Nullable<int> _SourceOpportunity_ActivityTargetId1;
		
		private System.Nullable<int> _BackRefCustomer_ActivityTargetId1;
		
		private System.Nullable<int> _BackRefOpportunity_ActivityTargetId1;
		
		private System.Nullable<int> _SourceQuote_ActivityTargetId;
		
		private System.Nullable<int> _SourceOpportunity_ActivityTargetId2;
		
		private System.Nullable<int> _BillToAddress_ID1;
		
		private System.Nullable<int> _ShipToAddress_ID1;
		
		private System.Nullable<int> _Owner_ID1;
		
		private System.Nullable<int> _PrimaryAddress_ID;
		
		private System.Nullable<int> _SourceLead_ActivityTargetId;
		
		private System.Nullable<int> _BillToAddress_ID2;
		
		private System.Nullable<int> _ShipToAddress_ID2;
		
		private System.Nullable<int> _SourceLead_ActivityTargetId1;
		
		private System.Nullable<int> _BillToAddress_ID3;
		
		private System.Nullable<int> _CRMOpportunity_ActivityTargetId;
		
		private System.Nullable<int> _CRMOpportunity_ActivityTargetId1;
		
		private System.Nullable<int> _ShipToAddress_ID3;
		
		private System.Nullable<int> _SourceLead_ActivityTargetId2;
		
		private System.Nullable<int> _Owner_ID2;
		
		private System.Nullable<int> _Account_ActivityTargetId;
		
		private System.Nullable<int> _Person_ID;
		
		private System.Nullable<int> _CRMContact_ActivityTargetId;
		
		private System.Nullable<int> _PrimaryAddress_ID1;
		
		private System.Nullable<int> _CRMContact_ActivityTargetId1;
		
		private System.Nullable<int> _SourceLead_ActivityTargetId3;
		
		private System.Nullable<int> _PrimaryContact_ActivityTargetId;
		
		private System.Nullable<int> _CRMAccount_ActivityTargetId;
		
		private System.Nullable<int> _PrimaryAddress_ID2;
		
		private System.Nullable<int> _CRMAccount_ActivityTargetId1;
		
		private System.Nullable<int> _SourceLead_ActivityTargetId4;
		
		private EntitySet<ActivityTarget> _ActivityTargets;
		
		private EntitySet<ActivityTarget> _ActivityTargets1;
		
		private EntitySet<ActivityTarget> _ActivityTargets2;
		
		private EntitySet<ActivityTarget> _ActivityTargets3;
		
		private EntitySet<ActivityTarget> _ActivityTargets4;
		
		private EntitySet<ActivityTarget> _ActivityTargets5;
		
		private EntitySet<ActivityTarget> _ActivityTargets6;
		
		private EntitySet<ActivityTarget> _ActivityTargets7;
		
		private EntitySet<ActivityTarget> _ActivityTargets8;
		
		private EntitySet<ActivityTarget> _ActivityTargets9;
		
		private EntitySet<ActivityTarget> _ActivityTargets10;
		
		private EntitySet<ActivityTarget> _ActivityTargets11;
		
		private EntitySet<ActivityTarget> _ActivityTargets12;
		
		private EntitySet<ActivityTarget> _ActivityTargets13;
		
		private EntitySet<ActivityTarget> _ActivityTargets14;
		
		private EntitySet<ActivityTarget> _ActivityTargets15;
		
		private EntitySet<ActivityTarget> _ActivityTargets16;
		
		private EntitySet<ActivityTarget> _ActivityTargets17;
		
		private EntitySet<ActivityTarget> _ActivityTargets18;
		
		private EntitySet<ActivityTarget> _ActivityTargets19;
		
		private EntitySet<ActivityTarget> _ActivityTargets20;
		
		private EntitySet<ActivityTarget> _ActivityTargets21;
		
		private EntitySet<ActivityTarget> _ActivityTargets22;
		
		private EntitySet<ActivityTarget> _ActivityTargets23;
		
		private EntitySet<ActivityTarget> _ActivityTargets24;
		
		private EntitySet<ActivityTarget> _ActivityTargets25;
		
		private EntitySet<Event> _Events;
		
		private EntitySet<LeadHistoryRecord> _LeadHistoryRecords;
		
		private EntitySet<Note> _Notes;
		
		private EntitySet<Note> _Notes1;
		
		private EntitySet<Note> _Notes2;
		
		private EntitySet<Note> _Notes3;
		
		private EntitySet<Note> _Notes4;
		
		private EntitySet<Note> _Notes5;
		
		private EntitySet<Note> _Notes6;
		
		private EntitySet<SaleItem> _SaleItems;
		
		private EntityRef<ActivityTarget> _ActivityTarget1;
		
		private EntityRef<ActivityTarget> _ActivityTarget2;
		
		private EntityRef<ActivityTarget> _ActivityTarget3;
		
		private EntityRef<ActivityTarget> _ActivityTarget4;
		
		private EntityRef<ActivityTarget> _ActivityTarget5;
		
		private EntityRef<ActivityTarget> _ActivityTarget6;
		
		private EntityRef<ActivityTarget> _ActivityTarget7;
		
		private EntityRef<ActivityTarget> _ActivityTarget8;
		
		private EntityRef<ActivityTarget> _ActivityTarget9;
		
		private EntityRef<ActivityTarget> _ActivityTarget10;
		
		private EntityRef<ActivityTarget> _ActivityTarget11;
		
		private EntityRef<ActivityTarget> _ActivityTarget12;
		
		private EntityRef<ActivityTarget> _ActivityTarget13;
		
		private EntityRef<ActivityTarget> _ActivityTarget14;
		
		private EntityRef<ActivityTarget> _ActivityTarget15;
		
		private EntityRef<ActivityTarget> _ActivityTarget16;
		
		private EntityRef<ActivityTarget> _ActivityTarget17;
		
		private EntityRef<ActivityTarget> _ActivityTarget18;
		
		private EntityRef<ActivityTarget> _ActivityTarget19;
		
		private EntityRef<ActivityTarget> _ActivityTarget20;
		
		private EntityRef<ActivityTarget> _ActivityTarget21;
		
		private EntityRef<ActivityTarget> _ActivityTarget22;
		
		private EntityRef<ActivityTarget> _ActivityTarget23;
		
		private EntityRef<ActivityTarget> _ActivityTarget24;
		
		private EntityRef<ActivityTarget> _ActivityTarget25;
		
		private EntityRef<ActivityTarget> _ActivityTarget26;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<Address> _Address2;
		
		private EntityRef<Address> _Address3;
		
		private EntityRef<Address> _Address4;
		
		private EntityRef<Address> _Address5;
		
		private EntityRef<Address> _Address6;
		
		private EntityRef<Address> _Address7;
		
		private EntityRef<Address> _Address8;
		
		private EntityRef<Address> _Address9;
		
		private EntityRef<Address> _Address10;
		
		private EntityRef<People> _People;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityTargetIdChanging(int value);
    partial void OnActivityTargetIdChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnPreferredContactMethodChanging(System.Nullable<int> value);
    partial void OnPreferredContactMethodChanged();
    partial void OnCreditLimitChanging(System.Nullable<decimal> value);
    partial void OnCreditLimitChanged();
    partial void OnCreditHoldChanging(System.Nullable<bool> value);
    partial void OnCreditHoldChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    partial void OnNumberOfEmployeesChanging(string value);
    partial void OnNumberOfEmployeesChanged();
    partial void OnSICCodeChanging(string value);
    partial void OnSICCodeChanged();
    partial void OnAnnualRevenueChanging(System.Nullable<decimal> value);
    partial void OnAnnualRevenueChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnOtherPhoneChanging(string value);
    partial void OnOtherPhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnOfficePhoneChanging(string value);
    partial void OnOfficePhoneChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnDiscountPercentChanging(System.Nullable<decimal> value);
    partial void OnDiscountPercentChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnStatus1Changing(System.Nullable<int> value);
    partial void OnStatus1Changed();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    partial void OnStatus2Changing(System.Nullable<int> value);
    partial void OnStatus2Changed();
    partial void OnEstimatedRevenueChanging(System.Nullable<decimal> value);
    partial void OnEstimatedRevenueChanged();
    partial void OnActualRevenueChanging(System.Nullable<decimal> value);
    partial void OnActualRevenueChanged();
    partial void OnProbabilityChanging(System.Nullable<int> value);
    partial void OnProbabilityChanged();
    partial void OnCloseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCloseDateChanged();
    partial void OnEstimatedCloseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEstimatedCloseDateChanged();
    partial void OnRevenueIsUserProvidedChanging(System.Nullable<bool> value);
    partial void OnRevenueIsUserProvidedChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnShippingMethodChanging(System.Nullable<int> value);
    partial void OnShippingMethodChanged();
    partial void OnStatus3Changing(System.Nullable<int> value);
    partial void OnStatus3Changed();
    partial void OnCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateChanged();
    partial void OnStatus4Changing(System.Nullable<int> value);
    partial void OnStatus4Changed();
    partial void OnEffectiveToChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveToChanged();
    partial void OnEffectiveFromChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveFromChanged();
    partial void OnDueByChanging(System.Nullable<System.DateTime> value);
    partial void OnDueByChanged();
    partial void OnClosedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedOnChanged();
    partial void OnDeliveryDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDate1Changed();
    partial void OnShippingMethod1Changing(System.Nullable<int> value);
    partial void OnShippingMethod1Changed();
    partial void OnTopicChanging(string value);
    partial void OnTopicChanged();
    partial void OnStatus5Changing(System.Nullable<int> value);
    partial void OnStatus5Changed();
    partial void OnCreatedOn1Changing(System.Nullable<System.DateTime> value);
    partial void OnCreatedOn1Changed();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLeadSourceChanging(System.Nullable<int> value);
    partial void OnLeadSourceChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnWebSite1Changing(string value);
    partial void OnWebSite1Changed();
    partial void OnAnnualRevenue1Changing(System.Nullable<decimal> value);
    partial void OnAnnualRevenue1Changed();
    partial void OnNumberOfEmployees1Changing(string value);
    partial void OnNumberOfEmployees1Changed();
    partial void OnSICCode1Changing(string value);
    partial void OnSICCode1Changed();
    partial void OnPreferredContactMethod1Changing(System.Nullable<int> value);
    partial void OnPreferredContactMethod1Changed();
    partial void OnEmail1Changing(string value);
    partial void OnEmail1Changed();
    partial void OnOtherPhone1Changing(string value);
    partial void OnOtherPhone1Changed();
    partial void OnMobilePhone1Changing(string value);
    partial void OnMobilePhone1Changed();
    partial void OnOfficePhone1Changing(string value);
    partial void OnOfficePhone1Changed();
    partial void OnHomePhone1Changing(string value);
    partial void OnHomePhone1Changed();
    partial void OnFax1Changing(string value);
    partial void OnFax1Changed();
    partial void OnDeliveryDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDate2Changed();
    partial void OnShippingMethod2Changing(System.Nullable<int> value);
    partial void OnShippingMethod2Changed();
    partial void OnDeliveryDate3Changing(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDate3Changed();
    partial void OnShippingMethod3Changing(System.Nullable<int> value);
    partial void OnShippingMethod3Changed();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnEmail2Changing(string value);
    partial void OnEmail2Changed();
    partial void OnOtherPhone2Changing(string value);
    partial void OnOtherPhone2Changed();
    partial void OnMobilePhone2Changing(string value);
    partial void OnMobilePhone2Changed();
    partial void OnOfficePhone2Changing(string value);
    partial void OnOfficePhone2Changed();
    partial void OnHomePhone2Changing(string value);
    partial void OnHomePhone2Changed();
    partial void OnFax2Changing(string value);
    partial void OnFax2Changed();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    partial void OnCustomer_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCustomer_ActivityTargetIdChanged();
    partial void OnOwner_IDChanging(System.Nullable<int> value);
    partial void OnOwner_IDChanged();
    partial void OnPotentialCustomer_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnPotentialCustomer_ActivityTargetIdChanged();
    partial void OnCustomer_ActivityTargetId1Changing(System.Nullable<int> value);
    partial void OnCustomer_ActivityTargetId1Changed();
    partial void OnBackRefOpportunity_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnBackRefOpportunity_ActivityTargetIdChanged();
    partial void OnBillToAddress_IDChanging(System.Nullable<int> value);
    partial void OnBillToAddress_IDChanged();
    partial void OnShipToAddress_IDChanging(System.Nullable<int> value);
    partial void OnShipToAddress_IDChanged();
    partial void OnSourceOpportunity_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnSourceOpportunity_ActivityTargetIdChanged();
    partial void OnBackRefCustomer_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnBackRefCustomer_ActivityTargetIdChanged();
    partial void OnSourceOrder_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnSourceOrder_ActivityTargetIdChanged();
    partial void OnOpportunity_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnOpportunity_ActivityTargetIdChanged();
    partial void OnSourceOpportunity_ActivityTargetId1Changing(System.Nullable<int> value);
    partial void OnSourceOpportunity_ActivityTargetId1Changed();
    partial void OnBackRefCustomer_ActivityTargetId1Changing(System.Nullable<int> value);
    partial void OnBackRefCustomer_ActivityTargetId1Changed();
    partial void OnBackRefOpportunity_ActivityTargetId1Changing(System.Nullable<int> value);
    partial void OnBackRefOpportunity_ActivityTargetId1Changed();
    partial void OnSourceQuote_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnSourceQuote_ActivityTargetIdChanged();
    partial void OnSourceOpportunity_ActivityTargetId2Changing(System.Nullable<int> value);
    partial void OnSourceOpportunity_ActivityTargetId2Changed();
    partial void OnBillToAddress_ID1Changing(System.Nullable<int> value);
    partial void OnBillToAddress_ID1Changed();
    partial void OnShipToAddress_ID1Changing(System.Nullable<int> value);
    partial void OnShipToAddress_ID1Changed();
    partial void OnOwner_ID1Changing(System.Nullable<int> value);
    partial void OnOwner_ID1Changed();
    partial void OnPrimaryAddress_IDChanging(System.Nullable<int> value);
    partial void OnPrimaryAddress_IDChanged();
    partial void OnSourceLead_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnSourceLead_ActivityTargetIdChanged();
    partial void OnBillToAddress_ID2Changing(System.Nullable<int> value);
    partial void OnBillToAddress_ID2Changed();
    partial void OnShipToAddress_ID2Changing(System.Nullable<int> value);
    partial void OnShipToAddress_ID2Changed();
    partial void OnSourceLead_ActivityTargetId1Changing(System.Nullable<int> value);
    partial void OnSourceLead_ActivityTargetId1Changed();
    partial void OnBillToAddress_ID3Changing(System.Nullable<int> value);
    partial void OnBillToAddress_ID3Changed();
    partial void OnCRMOpportunity_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMOpportunity_ActivityTargetIdChanged();
    partial void OnCRMOpportunity_ActivityTargetId1Changing(System.Nullable<int> value);
    partial void OnCRMOpportunity_ActivityTargetId1Changed();
    partial void OnShipToAddress_ID3Changing(System.Nullable<int> value);
    partial void OnShipToAddress_ID3Changed();
    partial void OnSourceLead_ActivityTargetId2Changing(System.Nullable<int> value);
    partial void OnSourceLead_ActivityTargetId2Changed();
    partial void OnOwner_ID2Changing(System.Nullable<int> value);
    partial void OnOwner_ID2Changed();
    partial void OnAccount_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnAccount_ActivityTargetIdChanged();
    partial void OnPerson_IDChanging(System.Nullable<int> value);
    partial void OnPerson_IDChanged();
    partial void OnCRMContact_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMContact_ActivityTargetIdChanged();
    partial void OnPrimaryAddress_ID1Changing(System.Nullable<int> value);
    partial void OnPrimaryAddress_ID1Changed();
    partial void OnCRMContact_ActivityTargetId1Changing(System.Nullable<int> value);
    partial void OnCRMContact_ActivityTargetId1Changed();
    partial void OnSourceLead_ActivityTargetId3Changing(System.Nullable<int> value);
    partial void OnSourceLead_ActivityTargetId3Changed();
    partial void OnPrimaryContact_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnPrimaryContact_ActivityTargetIdChanged();
    partial void OnCRMAccount_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMAccount_ActivityTargetIdChanged();
    partial void OnPrimaryAddress_ID2Changing(System.Nullable<int> value);
    partial void OnPrimaryAddress_ID2Changed();
    partial void OnCRMAccount_ActivityTargetId1Changing(System.Nullable<int> value);
    partial void OnCRMAccount_ActivityTargetId1Changed();
    partial void OnSourceLead_ActivityTargetId4Changing(System.Nullable<int> value);
    partial void OnSourceLead_ActivityTargetId4Changed();
    #endregion
		
		public ActivityTarget()
		{
			this._ActivityTargets = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets), new Action<ActivityTarget>(this.detach_ActivityTargets));
			this._ActivityTargets1 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets1), new Action<ActivityTarget>(this.detach_ActivityTargets1));
			this._ActivityTargets2 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets2), new Action<ActivityTarget>(this.detach_ActivityTargets2));
			this._ActivityTargets3 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets3), new Action<ActivityTarget>(this.detach_ActivityTargets3));
			this._ActivityTargets4 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets4), new Action<ActivityTarget>(this.detach_ActivityTargets4));
			this._ActivityTargets5 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets5), new Action<ActivityTarget>(this.detach_ActivityTargets5));
			this._ActivityTargets6 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets6), new Action<ActivityTarget>(this.detach_ActivityTargets6));
			this._ActivityTargets7 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets7), new Action<ActivityTarget>(this.detach_ActivityTargets7));
			this._ActivityTargets8 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets8), new Action<ActivityTarget>(this.detach_ActivityTargets8));
			this._ActivityTargets9 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets9), new Action<ActivityTarget>(this.detach_ActivityTargets9));
			this._ActivityTargets10 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets10), new Action<ActivityTarget>(this.detach_ActivityTargets10));
			this._ActivityTargets11 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets11), new Action<ActivityTarget>(this.detach_ActivityTargets11));
			this._ActivityTargets12 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets12), new Action<ActivityTarget>(this.detach_ActivityTargets12));
			this._ActivityTargets13 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets13), new Action<ActivityTarget>(this.detach_ActivityTargets13));
			this._ActivityTargets14 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets14), new Action<ActivityTarget>(this.detach_ActivityTargets14));
			this._ActivityTargets15 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets15), new Action<ActivityTarget>(this.detach_ActivityTargets15));
			this._ActivityTargets16 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets16), new Action<ActivityTarget>(this.detach_ActivityTargets16));
			this._ActivityTargets17 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets17), new Action<ActivityTarget>(this.detach_ActivityTargets17));
			this._ActivityTargets18 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets18), new Action<ActivityTarget>(this.detach_ActivityTargets18));
			this._ActivityTargets19 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets19), new Action<ActivityTarget>(this.detach_ActivityTargets19));
			this._ActivityTargets20 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets20), new Action<ActivityTarget>(this.detach_ActivityTargets20));
			this._ActivityTargets21 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets21), new Action<ActivityTarget>(this.detach_ActivityTargets21));
			this._ActivityTargets22 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets22), new Action<ActivityTarget>(this.detach_ActivityTargets22));
			this._ActivityTargets23 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets23), new Action<ActivityTarget>(this.detach_ActivityTargets23));
			this._ActivityTargets24 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets24), new Action<ActivityTarget>(this.detach_ActivityTargets24));
			this._ActivityTargets25 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets25), new Action<ActivityTarget>(this.detach_ActivityTargets25));
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			this._LeadHistoryRecords = new EntitySet<LeadHistoryRecord>(new Action<LeadHistoryRecord>(this.attach_LeadHistoryRecords), new Action<LeadHistoryRecord>(this.detach_LeadHistoryRecords));
			this._Notes = new EntitySet<Note>(new Action<Note>(this.attach_Notes), new Action<Note>(this.detach_Notes));
			this._Notes1 = new EntitySet<Note>(new Action<Note>(this.attach_Notes1), new Action<Note>(this.detach_Notes1));
			this._Notes2 = new EntitySet<Note>(new Action<Note>(this.attach_Notes2), new Action<Note>(this.detach_Notes2));
			this._Notes3 = new EntitySet<Note>(new Action<Note>(this.attach_Notes3), new Action<Note>(this.detach_Notes3));
			this._Notes4 = new EntitySet<Note>(new Action<Note>(this.attach_Notes4), new Action<Note>(this.detach_Notes4));
			this._Notes5 = new EntitySet<Note>(new Action<Note>(this.attach_Notes5), new Action<Note>(this.detach_Notes5));
			this._Notes6 = new EntitySet<Note>(new Action<Note>(this.attach_Notes6), new Action<Note>(this.detach_Notes6));
			this._SaleItems = new EntitySet<SaleItem>(new Action<SaleItem>(this.attach_SaleItems), new Action<SaleItem>(this.detach_SaleItems));
			this._ActivityTarget1 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget2 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget3 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget4 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget5 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget6 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget7 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget8 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget9 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget10 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget11 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget12 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget13 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget14 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget15 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget16 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget17 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget18 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget19 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget20 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget21 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget22 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget23 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget24 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget25 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget26 = default(EntityRef<ActivityTarget>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._Address2 = default(EntityRef<Address>);
			this._Address3 = default(EntityRef<Address>);
			this._Address4 = default(EntityRef<Address>);
			this._Address5 = default(EntityRef<Address>);
			this._Address6 = default(EntityRef<Address>);
			this._Address7 = default(EntityRef<Address>);
			this._Address8 = default(EntityRef<Address>);
			this._Address9 = default(EntityRef<Address>);
			this._Address10 = default(EntityRef<Address>);
			this._People = default(EntityRef<People>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityTargetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActivityTargetId
		{
			get
			{
				return this._ActivityTargetId;
			}
			set
			{
				if ((this._ActivityTargetId != value))
				{
					this.OnActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityTargetId = value;
					this.SendPropertyChanged("ActivityTargetId");
					this.OnActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredContactMethod", DbType="Int")]
		public System.Nullable<int> PreferredContactMethod
		{
			get
			{
				return this._PreferredContactMethod;
			}
			set
			{
				if ((this._PreferredContactMethod != value))
				{
					this.OnPreferredContactMethodChanging(value);
					this.SendPropertyChanging();
					this._PreferredContactMethod = value;
					this.SendPropertyChanged("PreferredContactMethod");
					this.OnPreferredContactMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditHold", DbType="Bit")]
		public System.Nullable<bool> CreditHold
		{
			get
			{
				return this._CreditHold;
			}
			set
			{
				if ((this._CreditHold != value))
				{
					this.OnCreditHoldChanging(value);
					this.SendPropertyChanging();
					this._CreditHold = value;
					this.SendPropertyChanged("CreditHold");
					this.OnCreditHoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(MAX)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="NVarChar(MAX)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfEmployees", DbType="NVarChar(MAX)")]
		public string NumberOfEmployees
		{
			get
			{
				return this._NumberOfEmployees;
			}
			set
			{
				if ((this._NumberOfEmployees != value))
				{
					this.OnNumberOfEmployeesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfEmployees = value;
					this.SendPropertyChanged("NumberOfEmployees");
					this.OnNumberOfEmployeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SICCode", DbType="NVarChar(MAX)")]
		public string SICCode
		{
			get
			{
				return this._SICCode;
			}
			set
			{
				if ((this._SICCode != value))
				{
					this.OnSICCodeChanging(value);
					this.SendPropertyChanging();
					this._SICCode = value;
					this.SendPropertyChanged("SICCode");
					this.OnSICCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualRevenue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AnnualRevenue
		{
			get
			{
				return this._AnnualRevenue;
			}
			set
			{
				if ((this._AnnualRevenue != value))
				{
					this.OnAnnualRevenueChanging(value);
					this.SendPropertyChanging();
					this._AnnualRevenue = value;
					this.SendPropertyChanged("AnnualRevenue");
					this.OnAnnualRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherPhone", DbType="NVarChar(MAX)")]
		public string OtherPhone
		{
			get
			{
				return this._OtherPhone;
			}
			set
			{
				if ((this._OtherPhone != value))
				{
					this.OnOtherPhoneChanging(value);
					this.SendPropertyChanging();
					this._OtherPhone = value;
					this.SendPropertyChanged("OtherPhone");
					this.OnOtherPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(MAX)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficePhone", DbType="NVarChar(MAX)")]
		public string OfficePhone
		{
			get
			{
				return this._OfficePhone;
			}
			set
			{
				if ((this._OfficePhone != value))
				{
					this.OnOfficePhoneChanging(value);
					this.SendPropertyChanging();
					this._OfficePhone = value;
					this.SendPropertyChanged("OfficePhone");
					this.OnOfficePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(MAX)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(MAX)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountPercent
		{
			get
			{
				return this._DiscountPercent;
			}
			set
			{
				if ((this._DiscountPercent != value))
				{
					this.OnDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercent = value;
					this.SendPropertyChanged("DiscountPercent");
					this.OnDiscountPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(MAX)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status1", DbType="Int")]
		public System.Nullable<int> Status1
		{
			get
			{
				return this._Status1;
			}
			set
			{
				if ((this._Status1 != value))
				{
					this.OnStatus1Changing(value);
					this.SendPropertyChanging();
					this._Status1 = value;
					this.SendPropertyChanged("Status1");
					this.OnStatus1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status2", DbType="Int")]
		public System.Nullable<int> Status2
		{
			get
			{
				return this._Status2;
			}
			set
			{
				if ((this._Status2 != value))
				{
					this.OnStatus2Changing(value);
					this.SendPropertyChanging();
					this._Status2 = value;
					this.SendPropertyChanged("Status2");
					this.OnStatus2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedRevenue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> EstimatedRevenue
		{
			get
			{
				return this._EstimatedRevenue;
			}
			set
			{
				if ((this._EstimatedRevenue != value))
				{
					this.OnEstimatedRevenueChanging(value);
					this.SendPropertyChanging();
					this._EstimatedRevenue = value;
					this.SendPropertyChanged("EstimatedRevenue");
					this.OnEstimatedRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualRevenue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ActualRevenue
		{
			get
			{
				return this._ActualRevenue;
			}
			set
			{
				if ((this._ActualRevenue != value))
				{
					this.OnActualRevenueChanging(value);
					this.SendPropertyChanging();
					this._ActualRevenue = value;
					this.SendPropertyChanged("ActualRevenue");
					this.OnActualRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probability", DbType="Int")]
		public System.Nullable<int> Probability
		{
			get
			{
				return this._Probability;
			}
			set
			{
				if ((this._Probability != value))
				{
					this.OnProbabilityChanging(value);
					this.SendPropertyChanging();
					this._Probability = value;
					this.SendPropertyChanged("Probability");
					this.OnProbabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CloseDate
		{
			get
			{
				return this._CloseDate;
			}
			set
			{
				if ((this._CloseDate != value))
				{
					this.OnCloseDateChanging(value);
					this.SendPropertyChanging();
					this._CloseDate = value;
					this.SendPropertyChanged("CloseDate");
					this.OnCloseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedCloseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EstimatedCloseDate
		{
			get
			{
				return this._EstimatedCloseDate;
			}
			set
			{
				if ((this._EstimatedCloseDate != value))
				{
					this.OnEstimatedCloseDateChanging(value);
					this.SendPropertyChanging();
					this._EstimatedCloseDate = value;
					this.SendPropertyChanged("EstimatedCloseDate");
					this.OnEstimatedCloseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueIsUserProvided", DbType="Bit")]
		public System.Nullable<bool> RevenueIsUserProvided
		{
			get
			{
				return this._RevenueIsUserProvided;
			}
			set
			{
				if ((this._RevenueIsUserProvided != value))
				{
					this.OnRevenueIsUserProvidedChanging(value);
					this.SendPropertyChanging();
					this._RevenueIsUserProvided = value;
					this.SendPropertyChanged("RevenueIsUserProvided");
					this.OnRevenueIsUserProvidedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMethod", DbType="Int")]
		public System.Nullable<int> ShippingMethod
		{
			get
			{
				return this._ShippingMethod;
			}
			set
			{
				if ((this._ShippingMethod != value))
				{
					this.OnShippingMethodChanging(value);
					this.SendPropertyChanging();
					this._ShippingMethod = value;
					this.SendPropertyChanged("ShippingMethod");
					this.OnShippingMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status3", DbType="Int")]
		public System.Nullable<int> Status3
		{
			get
			{
				return this._Status3;
			}
			set
			{
				if ((this._Status3 != value))
				{
					this.OnStatus3Changing(value);
					this.SendPropertyChanging();
					this._Status3 = value;
					this.SendPropertyChanged("Status3");
					this.OnStatus3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status4", DbType="Int")]
		public System.Nullable<int> Status4
		{
			get
			{
				return this._Status4;
			}
			set
			{
				if ((this._Status4 != value))
				{
					this.OnStatus4Changing(value);
					this.SendPropertyChanging();
					this._Status4 = value;
					this.SendPropertyChanged("Status4");
					this.OnStatus4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveTo
		{
			get
			{
				return this._EffectiveTo;
			}
			set
			{
				if ((this._EffectiveTo != value))
				{
					this.OnEffectiveToChanging(value);
					this.SendPropertyChanging();
					this._EffectiveTo = value;
					this.SendPropertyChanged("EffectiveTo");
					this.OnEffectiveToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveFrom
		{
			get
			{
				return this._EffectiveFrom;
			}
			set
			{
				if ((this._EffectiveFrom != value))
				{
					this.OnEffectiveFromChanging(value);
					this.SendPropertyChanging();
					this._EffectiveFrom = value;
					this.SendPropertyChanged("EffectiveFrom");
					this.OnEffectiveFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueBy", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueBy
		{
			get
			{
				return this._DueBy;
			}
			set
			{
				if ((this._DueBy != value))
				{
					this.OnDueByChanging(value);
					this.SendPropertyChanging();
					this._DueBy = value;
					this.SendPropertyChanged("DueBy");
					this.OnDueByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosedOn
		{
			get
			{
				return this._ClosedOn;
			}
			set
			{
				if ((this._ClosedOn != value))
				{
					this.OnClosedOnChanging(value);
					this.SendPropertyChanging();
					this._ClosedOn = value;
					this.SendPropertyChanged("ClosedOn");
					this.OnClosedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate1
		{
			get
			{
				return this._DeliveryDate1;
			}
			set
			{
				if ((this._DeliveryDate1 != value))
				{
					this.OnDeliveryDate1Changing(value);
					this.SendPropertyChanging();
					this._DeliveryDate1 = value;
					this.SendPropertyChanged("DeliveryDate1");
					this.OnDeliveryDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMethod1", DbType="Int")]
		public System.Nullable<int> ShippingMethod1
		{
			get
			{
				return this._ShippingMethod1;
			}
			set
			{
				if ((this._ShippingMethod1 != value))
				{
					this.OnShippingMethod1Changing(value);
					this.SendPropertyChanging();
					this._ShippingMethod1 = value;
					this.SendPropertyChanged("ShippingMethod1");
					this.OnShippingMethod1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(MAX)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this.OnTopicChanging(value);
					this.SendPropertyChanging();
					this._Topic = value;
					this.SendPropertyChanged("Topic");
					this.OnTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status5", DbType="Int")]
		public System.Nullable<int> Status5
		{
			get
			{
				return this._Status5;
			}
			set
			{
				if ((this._Status5 != value))
				{
					this.OnStatus5Changing(value);
					this.SendPropertyChanging();
					this._Status5 = value;
					this.SendPropertyChanged("Status5");
					this.OnStatus5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn1", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn1
		{
			get
			{
				return this._CreatedOn1;
			}
			set
			{
				if ((this._CreatedOn1 != value))
				{
					this.OnCreatedOn1Changing(value);
					this.SendPropertyChanging();
					this._CreatedOn1 = value;
					this.SendPropertyChanged("CreatedOn1");
					this.OnCreatedOn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadSource", DbType="Int")]
		public System.Nullable<int> LeadSource
		{
			get
			{
				return this._LeadSource;
			}
			set
			{
				if ((this._LeadSource != value))
				{
					this.OnLeadSourceChanging(value);
					this.SendPropertyChanging();
					this._LeadSource = value;
					this.SendPropertyChanged("LeadSource");
					this.OnLeadSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(MAX)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite1", DbType="NVarChar(MAX)")]
		public string WebSite1
		{
			get
			{
				return this._WebSite1;
			}
			set
			{
				if ((this._WebSite1 != value))
				{
					this.OnWebSite1Changing(value);
					this.SendPropertyChanging();
					this._WebSite1 = value;
					this.SendPropertyChanged("WebSite1");
					this.OnWebSite1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualRevenue1", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AnnualRevenue1
		{
			get
			{
				return this._AnnualRevenue1;
			}
			set
			{
				if ((this._AnnualRevenue1 != value))
				{
					this.OnAnnualRevenue1Changing(value);
					this.SendPropertyChanging();
					this._AnnualRevenue1 = value;
					this.SendPropertyChanged("AnnualRevenue1");
					this.OnAnnualRevenue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfEmployees1", DbType="NVarChar(MAX)")]
		public string NumberOfEmployees1
		{
			get
			{
				return this._NumberOfEmployees1;
			}
			set
			{
				if ((this._NumberOfEmployees1 != value))
				{
					this.OnNumberOfEmployees1Changing(value);
					this.SendPropertyChanging();
					this._NumberOfEmployees1 = value;
					this.SendPropertyChanged("NumberOfEmployees1");
					this.OnNumberOfEmployees1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SICCode1", DbType="NVarChar(MAX)")]
		public string SICCode1
		{
			get
			{
				return this._SICCode1;
			}
			set
			{
				if ((this._SICCode1 != value))
				{
					this.OnSICCode1Changing(value);
					this.SendPropertyChanging();
					this._SICCode1 = value;
					this.SendPropertyChanged("SICCode1");
					this.OnSICCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredContactMethod1", DbType="Int")]
		public System.Nullable<int> PreferredContactMethod1
		{
			get
			{
				return this._PreferredContactMethod1;
			}
			set
			{
				if ((this._PreferredContactMethod1 != value))
				{
					this.OnPreferredContactMethod1Changing(value);
					this.SendPropertyChanging();
					this._PreferredContactMethod1 = value;
					this.SendPropertyChanged("PreferredContactMethod1");
					this.OnPreferredContactMethod1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email1", DbType="NVarChar(MAX)")]
		public string Email1
		{
			get
			{
				return this._Email1;
			}
			set
			{
				if ((this._Email1 != value))
				{
					this.OnEmail1Changing(value);
					this.SendPropertyChanging();
					this._Email1 = value;
					this.SendPropertyChanged("Email1");
					this.OnEmail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherPhone1", DbType="NVarChar(MAX)")]
		public string OtherPhone1
		{
			get
			{
				return this._OtherPhone1;
			}
			set
			{
				if ((this._OtherPhone1 != value))
				{
					this.OnOtherPhone1Changing(value);
					this.SendPropertyChanging();
					this._OtherPhone1 = value;
					this.SendPropertyChanged("OtherPhone1");
					this.OnOtherPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone1", DbType="NVarChar(MAX)")]
		public string MobilePhone1
		{
			get
			{
				return this._MobilePhone1;
			}
			set
			{
				if ((this._MobilePhone1 != value))
				{
					this.OnMobilePhone1Changing(value);
					this.SendPropertyChanging();
					this._MobilePhone1 = value;
					this.SendPropertyChanged("MobilePhone1");
					this.OnMobilePhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficePhone1", DbType="NVarChar(MAX)")]
		public string OfficePhone1
		{
			get
			{
				return this._OfficePhone1;
			}
			set
			{
				if ((this._OfficePhone1 != value))
				{
					this.OnOfficePhone1Changing(value);
					this.SendPropertyChanging();
					this._OfficePhone1 = value;
					this.SendPropertyChanged("OfficePhone1");
					this.OnOfficePhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone1", DbType="NVarChar(MAX)")]
		public string HomePhone1
		{
			get
			{
				return this._HomePhone1;
			}
			set
			{
				if ((this._HomePhone1 != value))
				{
					this.OnHomePhone1Changing(value);
					this.SendPropertyChanging();
					this._HomePhone1 = value;
					this.SendPropertyChanged("HomePhone1");
					this.OnHomePhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax1", DbType="NVarChar(MAX)")]
		public string Fax1
		{
			get
			{
				return this._Fax1;
			}
			set
			{
				if ((this._Fax1 != value))
				{
					this.OnFax1Changing(value);
					this.SendPropertyChanging();
					this._Fax1 = value;
					this.SendPropertyChanged("Fax1");
					this.OnFax1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate2
		{
			get
			{
				return this._DeliveryDate2;
			}
			set
			{
				if ((this._DeliveryDate2 != value))
				{
					this.OnDeliveryDate2Changing(value);
					this.SendPropertyChanging();
					this._DeliveryDate2 = value;
					this.SendPropertyChanged("DeliveryDate2");
					this.OnDeliveryDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMethod2", DbType="Int")]
		public System.Nullable<int> ShippingMethod2
		{
			get
			{
				return this._ShippingMethod2;
			}
			set
			{
				if ((this._ShippingMethod2 != value))
				{
					this.OnShippingMethod2Changing(value);
					this.SendPropertyChanging();
					this._ShippingMethod2 = value;
					this.SendPropertyChanged("ShippingMethod2");
					this.OnShippingMethod2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate3", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate3
		{
			get
			{
				return this._DeliveryDate3;
			}
			set
			{
				if ((this._DeliveryDate3 != value))
				{
					this.OnDeliveryDate3Changing(value);
					this.SendPropertyChanging();
					this._DeliveryDate3 = value;
					this.SendPropertyChanged("DeliveryDate3");
					this.OnDeliveryDate3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingMethod3", DbType="Int")]
		public System.Nullable<int> ShippingMethod3
		{
			get
			{
				return this._ShippingMethod3;
			}
			set
			{
				if ((this._ShippingMethod3 != value))
				{
					this.OnShippingMethod3Changing(value);
					this.SendPropertyChanging();
					this._ShippingMethod3 = value;
					this.SendPropertyChanged("ShippingMethod3");
					this.OnShippingMethod3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email2", DbType="NVarChar(MAX)")]
		public string Email2
		{
			get
			{
				return this._Email2;
			}
			set
			{
				if ((this._Email2 != value))
				{
					this.OnEmail2Changing(value);
					this.SendPropertyChanging();
					this._Email2 = value;
					this.SendPropertyChanged("Email2");
					this.OnEmail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherPhone2", DbType="NVarChar(MAX)")]
		public string OtherPhone2
		{
			get
			{
				return this._OtherPhone2;
			}
			set
			{
				if ((this._OtherPhone2 != value))
				{
					this.OnOtherPhone2Changing(value);
					this.SendPropertyChanging();
					this._OtherPhone2 = value;
					this.SendPropertyChanged("OtherPhone2");
					this.OnOtherPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone2", DbType="NVarChar(MAX)")]
		public string MobilePhone2
		{
			get
			{
				return this._MobilePhone2;
			}
			set
			{
				if ((this._MobilePhone2 != value))
				{
					this.OnMobilePhone2Changing(value);
					this.SendPropertyChanging();
					this._MobilePhone2 = value;
					this.SendPropertyChanged("MobilePhone2");
					this.OnMobilePhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficePhone2", DbType="NVarChar(MAX)")]
		public string OfficePhone2
		{
			get
			{
				return this._OfficePhone2;
			}
			set
			{
				if ((this._OfficePhone2 != value))
				{
					this.OnOfficePhone2Changing(value);
					this.SendPropertyChanging();
					this._OfficePhone2 = value;
					this.SendPropertyChanged("OfficePhone2");
					this.OnOfficePhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone2", DbType="NVarChar(MAX)")]
		public string HomePhone2
		{
			get
			{
				return this._HomePhone2;
			}
			set
			{
				if ((this._HomePhone2 != value))
				{
					this.OnHomePhone2Changing(value);
					this.SendPropertyChanging();
					this._HomePhone2 = value;
					this.SendPropertyChanged("HomePhone2");
					this.OnHomePhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax2", DbType="NVarChar(MAX)")]
		public string Fax2
		{
			get
			{
				return this._Fax2;
			}
			set
			{
				if ((this._Fax2 != value))
				{
					this.OnFax2Changing(value);
					this.SendPropertyChanging();
					this._Fax2 = value;
					this.SendPropertyChanged("Fax2");
					this.OnFax2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> Customer_ActivityTargetId
		{
			get
			{
				return this._Customer_ActivityTargetId;
			}
			set
			{
				if ((this._Customer_ActivityTargetId != value))
				{
					if (this._ActivityTarget12.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._Customer_ActivityTargetId = value;
					this.SendPropertyChanged("Customer_ActivityTargetId");
					this.OnCustomer_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner_ID", DbType="Int")]
		public System.Nullable<int> Owner_ID
		{
			get
			{
				return this._Owner_ID;
			}
			set
			{
				if ((this._Owner_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwner_IDChanging(value);
					this.SendPropertyChanging();
					this._Owner_ID = value;
					this.SendPropertyChanged("Owner_ID");
					this.OnOwner_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialCustomer_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> PotentialCustomer_ActivityTargetId
		{
			get
			{
				return this._PotentialCustomer_ActivityTargetId;
			}
			set
			{
				if ((this._PotentialCustomer_ActivityTargetId != value))
				{
					if (this._ActivityTarget15.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPotentialCustomer_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._PotentialCustomer_ActivityTargetId = value;
					this.SendPropertyChanged("PotentialCustomer_ActivityTargetId");
					this.OnPotentialCustomer_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ActivityTargetId1", DbType="Int")]
		public System.Nullable<int> Customer_ActivityTargetId1
		{
			get
			{
				return this._Customer_ActivityTargetId1;
			}
			set
			{
				if ((this._Customer_ActivityTargetId1 != value))
				{
					if (this._ActivityTarget13.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_ActivityTargetId1Changing(value);
					this.SendPropertyChanging();
					this._Customer_ActivityTargetId1 = value;
					this.SendPropertyChanged("Customer_ActivityTargetId1");
					this.OnCustomer_ActivityTargetId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackRefOpportunity_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> BackRefOpportunity_ActivityTargetId
		{
			get
			{
				return this._BackRefOpportunity_ActivityTargetId;
			}
			set
			{
				if ((this._BackRefOpportunity_ActivityTargetId != value))
				{
					if (this._ActivityTarget4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBackRefOpportunity_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._BackRefOpportunity_ActivityTargetId = value;
					this.SendPropertyChanged("BackRefOpportunity_ActivityTargetId");
					this.OnBackRefOpportunity_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToAddress_ID", DbType="Int")]
		public System.Nullable<int> BillToAddress_ID
		{
			get
			{
				return this._BillToAddress_ID;
			}
			set
			{
				if ((this._BillToAddress_ID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillToAddress_IDChanging(value);
					this.SendPropertyChanging();
					this._BillToAddress_ID = value;
					this.SendPropertyChanged("BillToAddress_ID");
					this.OnBillToAddress_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToAddress_ID", DbType="Int")]
		public System.Nullable<int> ShipToAddress_ID
		{
			get
			{
				return this._ShipToAddress_ID;
			}
			set
			{
				if ((this._ShipToAddress_ID != value))
				{
					if (this._Address7.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipToAddress_IDChanging(value);
					this.SendPropertyChanging();
					this._ShipToAddress_ID = value;
					this.SendPropertyChanged("ShipToAddress_ID");
					this.OnShipToAddress_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceOpportunity_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> SourceOpportunity_ActivityTargetId
		{
			get
			{
				return this._SourceOpportunity_ActivityTargetId;
			}
			set
			{
				if ((this._SourceOpportunity_ActivityTargetId != value))
				{
					if (this._ActivityTarget22.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceOpportunity_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._SourceOpportunity_ActivityTargetId = value;
					this.SendPropertyChanged("SourceOpportunity_ActivityTargetId");
					this.OnSourceOpportunity_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackRefCustomer_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> BackRefCustomer_ActivityTargetId
		{
			get
			{
				return this._BackRefCustomer_ActivityTargetId;
			}
			set
			{
				if ((this._BackRefCustomer_ActivityTargetId != value))
				{
					if (this._ActivityTarget2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBackRefCustomer_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._BackRefCustomer_ActivityTargetId = value;
					this.SendPropertyChanged("BackRefCustomer_ActivityTargetId");
					this.OnBackRefCustomer_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceOrder_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> SourceOrder_ActivityTargetId
		{
			get
			{
				return this._SourceOrder_ActivityTargetId;
			}
			set
			{
				if ((this._SourceOrder_ActivityTargetId != value))
				{
					if (this._ActivityTarget25.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceOrder_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._SourceOrder_ActivityTargetId = value;
					this.SendPropertyChanged("SourceOrder_ActivityTargetId");
					this.OnSourceOrder_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opportunity_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> Opportunity_ActivityTargetId
		{
			get
			{
				return this._Opportunity_ActivityTargetId;
			}
			set
			{
				if ((this._Opportunity_ActivityTargetId != value))
				{
					if (this._ActivityTarget14.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpportunity_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._Opportunity_ActivityTargetId = value;
					this.SendPropertyChanged("Opportunity_ActivityTargetId");
					this.OnOpportunity_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceOpportunity_ActivityTargetId1", DbType="Int")]
		public System.Nullable<int> SourceOpportunity_ActivityTargetId1
		{
			get
			{
				return this._SourceOpportunity_ActivityTargetId1;
			}
			set
			{
				if ((this._SourceOpportunity_ActivityTargetId1 != value))
				{
					if (this._ActivityTarget23.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceOpportunity_ActivityTargetId1Changing(value);
					this.SendPropertyChanging();
					this._SourceOpportunity_ActivityTargetId1 = value;
					this.SendPropertyChanged("SourceOpportunity_ActivityTargetId1");
					this.OnSourceOpportunity_ActivityTargetId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackRefCustomer_ActivityTargetId1", DbType="Int")]
		public System.Nullable<int> BackRefCustomer_ActivityTargetId1
		{
			get
			{
				return this._BackRefCustomer_ActivityTargetId1;
			}
			set
			{
				if ((this._BackRefCustomer_ActivityTargetId1 != value))
				{
					if (this._ActivityTarget3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBackRefCustomer_ActivityTargetId1Changing(value);
					this.SendPropertyChanging();
					this._BackRefCustomer_ActivityTargetId1 = value;
					this.SendPropertyChanged("BackRefCustomer_ActivityTargetId1");
					this.OnBackRefCustomer_ActivityTargetId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackRefOpportunity_ActivityTargetId1", DbType="Int")]
		public System.Nullable<int> BackRefOpportunity_ActivityTargetId1
		{
			get
			{
				return this._BackRefOpportunity_ActivityTargetId1;
			}
			set
			{
				if ((this._BackRefOpportunity_ActivityTargetId1 != value))
				{
					if (this._ActivityTarget5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBackRefOpportunity_ActivityTargetId1Changing(value);
					this.SendPropertyChanging();
					this._BackRefOpportunity_ActivityTargetId1 = value;
					this.SendPropertyChanged("BackRefOpportunity_ActivityTargetId1");
					this.OnBackRefOpportunity_ActivityTargetId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceQuote_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> SourceQuote_ActivityTargetId
		{
			get
			{
				return this._SourceQuote_ActivityTargetId;
			}
			set
			{
				if ((this._SourceQuote_ActivityTargetId != value))
				{
					if (this._ActivityTarget26.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceQuote_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._SourceQuote_ActivityTargetId = value;
					this.SendPropertyChanged("SourceQuote_ActivityTargetId");
					this.OnSourceQuote_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceOpportunity_ActivityTargetId2", DbType="Int")]
		public System.Nullable<int> SourceOpportunity_ActivityTargetId2
		{
			get
			{
				return this._SourceOpportunity_ActivityTargetId2;
			}
			set
			{
				if ((this._SourceOpportunity_ActivityTargetId2 != value))
				{
					if (this._ActivityTarget24.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceOpportunity_ActivityTargetId2Changing(value);
					this.SendPropertyChanging();
					this._SourceOpportunity_ActivityTargetId2 = value;
					this.SendPropertyChanged("SourceOpportunity_ActivityTargetId2");
					this.OnSourceOpportunity_ActivityTargetId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToAddress_ID1", DbType="Int")]
		public System.Nullable<int> BillToAddress_ID1
		{
			get
			{
				return this._BillToAddress_ID1;
			}
			set
			{
				if ((this._BillToAddress_ID1 != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillToAddress_ID1Changing(value);
					this.SendPropertyChanging();
					this._BillToAddress_ID1 = value;
					this.SendPropertyChanged("BillToAddress_ID1");
					this.OnBillToAddress_ID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToAddress_ID1", DbType="Int")]
		public System.Nullable<int> ShipToAddress_ID1
		{
			get
			{
				return this._ShipToAddress_ID1;
			}
			set
			{
				if ((this._ShipToAddress_ID1 != value))
				{
					if (this._Address8.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipToAddress_ID1Changing(value);
					this.SendPropertyChanging();
					this._ShipToAddress_ID1 = value;
					this.SendPropertyChanged("ShipToAddress_ID1");
					this.OnShipToAddress_ID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner_ID1", DbType="Int")]
		public System.Nullable<int> Owner_ID1
		{
			get
			{
				return this._Owner_ID1;
			}
			set
			{
				if ((this._Owner_ID1 != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwner_ID1Changing(value);
					this.SendPropertyChanging();
					this._Owner_ID1 = value;
					this.SendPropertyChanged("Owner_ID1");
					this.OnOwner_ID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryAddress_ID", DbType="Int")]
		public System.Nullable<int> PrimaryAddress_ID
		{
			get
			{
				return this._PrimaryAddress_ID;
			}
			set
			{
				if ((this._PrimaryAddress_ID != value))
				{
					if (this._Address4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryAddress_IDChanging(value);
					this.SendPropertyChanging();
					this._PrimaryAddress_ID = value;
					this.SendPropertyChanged("PrimaryAddress_ID");
					this.OnPrimaryAddress_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceLead_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> SourceLead_ActivityTargetId
		{
			get
			{
				return this._SourceLead_ActivityTargetId;
			}
			set
			{
				if ((this._SourceLead_ActivityTargetId != value))
				{
					if (this._ActivityTarget17.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceLead_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._SourceLead_ActivityTargetId = value;
					this.SendPropertyChanged("SourceLead_ActivityTargetId");
					this.OnSourceLead_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToAddress_ID2", DbType="Int")]
		public System.Nullable<int> BillToAddress_ID2
		{
			get
			{
				return this._BillToAddress_ID2;
			}
			set
			{
				if ((this._BillToAddress_ID2 != value))
				{
					if (this._Address2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillToAddress_ID2Changing(value);
					this.SendPropertyChanging();
					this._BillToAddress_ID2 = value;
					this.SendPropertyChanged("BillToAddress_ID2");
					this.OnBillToAddress_ID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToAddress_ID2", DbType="Int")]
		public System.Nullable<int> ShipToAddress_ID2
		{
			get
			{
				return this._ShipToAddress_ID2;
			}
			set
			{
				if ((this._ShipToAddress_ID2 != value))
				{
					if (this._Address9.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipToAddress_ID2Changing(value);
					this.SendPropertyChanging();
					this._ShipToAddress_ID2 = value;
					this.SendPropertyChanged("ShipToAddress_ID2");
					this.OnShipToAddress_ID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceLead_ActivityTargetId1", DbType="Int")]
		public System.Nullable<int> SourceLead_ActivityTargetId1
		{
			get
			{
				return this._SourceLead_ActivityTargetId1;
			}
			set
			{
				if ((this._SourceLead_ActivityTargetId1 != value))
				{
					if (this._ActivityTarget18.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceLead_ActivityTargetId1Changing(value);
					this.SendPropertyChanging();
					this._SourceLead_ActivityTargetId1 = value;
					this.SendPropertyChanged("SourceLead_ActivityTargetId1");
					this.OnSourceLead_ActivityTargetId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToAddress_ID3", DbType="Int")]
		public System.Nullable<int> BillToAddress_ID3
		{
			get
			{
				return this._BillToAddress_ID3;
			}
			set
			{
				if ((this._BillToAddress_ID3 != value))
				{
					if (this._Address3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillToAddress_ID3Changing(value);
					this.SendPropertyChanging();
					this._BillToAddress_ID3 = value;
					this.SendPropertyChanged("BillToAddress_ID3");
					this.OnBillToAddress_ID3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMOpportunity_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMOpportunity_ActivityTargetId
		{
			get
			{
				return this._CRMOpportunity_ActivityTargetId;
			}
			set
			{
				if ((this._CRMOpportunity_ActivityTargetId != value))
				{
					if (this._ActivityTarget10.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMOpportunity_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMOpportunity_ActivityTargetId = value;
					this.SendPropertyChanged("CRMOpportunity_ActivityTargetId");
					this.OnCRMOpportunity_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMOpportunity_ActivityTargetId1", DbType="Int")]
		public System.Nullable<int> CRMOpportunity_ActivityTargetId1
		{
			get
			{
				return this._CRMOpportunity_ActivityTargetId1;
			}
			set
			{
				if ((this._CRMOpportunity_ActivityTargetId1 != value))
				{
					if (this._ActivityTarget11.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMOpportunity_ActivityTargetId1Changing(value);
					this.SendPropertyChanging();
					this._CRMOpportunity_ActivityTargetId1 = value;
					this.SendPropertyChanged("CRMOpportunity_ActivityTargetId1");
					this.OnCRMOpportunity_ActivityTargetId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToAddress_ID3", DbType="Int")]
		public System.Nullable<int> ShipToAddress_ID3
		{
			get
			{
				return this._ShipToAddress_ID3;
			}
			set
			{
				if ((this._ShipToAddress_ID3 != value))
				{
					if (this._Address10.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipToAddress_ID3Changing(value);
					this.SendPropertyChanging();
					this._ShipToAddress_ID3 = value;
					this.SendPropertyChanged("ShipToAddress_ID3");
					this.OnShipToAddress_ID3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceLead_ActivityTargetId2", DbType="Int")]
		public System.Nullable<int> SourceLead_ActivityTargetId2
		{
			get
			{
				return this._SourceLead_ActivityTargetId2;
			}
			set
			{
				if ((this._SourceLead_ActivityTargetId2 != value))
				{
					if (this._ActivityTarget19.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceLead_ActivityTargetId2Changing(value);
					this.SendPropertyChanging();
					this._SourceLead_ActivityTargetId2 = value;
					this.SendPropertyChanged("SourceLead_ActivityTargetId2");
					this.OnSourceLead_ActivityTargetId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner_ID2", DbType="Int")]
		public System.Nullable<int> Owner_ID2
		{
			get
			{
				return this._Owner_ID2;
			}
			set
			{
				if ((this._Owner_ID2 != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwner_ID2Changing(value);
					this.SendPropertyChanging();
					this._Owner_ID2 = value;
					this.SendPropertyChanged("Owner_ID2");
					this.OnOwner_ID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> Account_ActivityTargetId
		{
			get
			{
				return this._Account_ActivityTargetId;
			}
			set
			{
				if ((this._Account_ActivityTargetId != value))
				{
					if (this._ActivityTarget1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccount_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._Account_ActivityTargetId = value;
					this.SendPropertyChanged("Account_ActivityTargetId");
					this.OnAccount_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_ID", DbType="Int")]
		public System.Nullable<int> Person_ID
		{
			get
			{
				return this._Person_ID;
			}
			set
			{
				if ((this._Person_ID != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPerson_IDChanging(value);
					this.SendPropertyChanging();
					this._Person_ID = value;
					this.SendPropertyChanged("Person_ID");
					this.OnPerson_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMContact_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMContact_ActivityTargetId
		{
			get
			{
				return this._CRMContact_ActivityTargetId;
			}
			set
			{
				if ((this._CRMContact_ActivityTargetId != value))
				{
					if (this._ActivityTarget8.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMContact_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMContact_ActivityTargetId = value;
					this.SendPropertyChanged("CRMContact_ActivityTargetId");
					this.OnCRMContact_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryAddress_ID1", DbType="Int")]
		public System.Nullable<int> PrimaryAddress_ID1
		{
			get
			{
				return this._PrimaryAddress_ID1;
			}
			set
			{
				if ((this._PrimaryAddress_ID1 != value))
				{
					if (this._Address5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryAddress_ID1Changing(value);
					this.SendPropertyChanging();
					this._PrimaryAddress_ID1 = value;
					this.SendPropertyChanged("PrimaryAddress_ID1");
					this.OnPrimaryAddress_ID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMContact_ActivityTargetId1", DbType="Int")]
		public System.Nullable<int> CRMContact_ActivityTargetId1
		{
			get
			{
				return this._CRMContact_ActivityTargetId1;
			}
			set
			{
				if ((this._CRMContact_ActivityTargetId1 != value))
				{
					if (this._ActivityTarget9.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMContact_ActivityTargetId1Changing(value);
					this.SendPropertyChanging();
					this._CRMContact_ActivityTargetId1 = value;
					this.SendPropertyChanged("CRMContact_ActivityTargetId1");
					this.OnCRMContact_ActivityTargetId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceLead_ActivityTargetId3", DbType="Int")]
		public System.Nullable<int> SourceLead_ActivityTargetId3
		{
			get
			{
				return this._SourceLead_ActivityTargetId3;
			}
			set
			{
				if ((this._SourceLead_ActivityTargetId3 != value))
				{
					if (this._ActivityTarget20.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceLead_ActivityTargetId3Changing(value);
					this.SendPropertyChanging();
					this._SourceLead_ActivityTargetId3 = value;
					this.SendPropertyChanged("SourceLead_ActivityTargetId3");
					this.OnSourceLead_ActivityTargetId3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContact_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> PrimaryContact_ActivityTargetId
		{
			get
			{
				return this._PrimaryContact_ActivityTargetId;
			}
			set
			{
				if ((this._PrimaryContact_ActivityTargetId != value))
				{
					if (this._ActivityTarget16.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryContact_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContact_ActivityTargetId = value;
					this.SendPropertyChanged("PrimaryContact_ActivityTargetId");
					this.OnPrimaryContact_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMAccount_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMAccount_ActivityTargetId
		{
			get
			{
				return this._CRMAccount_ActivityTargetId;
			}
			set
			{
				if ((this._CRMAccount_ActivityTargetId != value))
				{
					if (this._ActivityTarget6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMAccount_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMAccount_ActivityTargetId = value;
					this.SendPropertyChanged("CRMAccount_ActivityTargetId");
					this.OnCRMAccount_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryAddress_ID2", DbType="Int")]
		public System.Nullable<int> PrimaryAddress_ID2
		{
			get
			{
				return this._PrimaryAddress_ID2;
			}
			set
			{
				if ((this._PrimaryAddress_ID2 != value))
				{
					if (this._Address6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryAddress_ID2Changing(value);
					this.SendPropertyChanging();
					this._PrimaryAddress_ID2 = value;
					this.SendPropertyChanged("PrimaryAddress_ID2");
					this.OnPrimaryAddress_ID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMAccount_ActivityTargetId1", DbType="Int")]
		public System.Nullable<int> CRMAccount_ActivityTargetId1
		{
			get
			{
				return this._CRMAccount_ActivityTargetId1;
			}
			set
			{
				if ((this._CRMAccount_ActivityTargetId1 != value))
				{
					if (this._ActivityTarget7.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMAccount_ActivityTargetId1Changing(value);
					this.SendPropertyChanging();
					this._CRMAccount_ActivityTargetId1 = value;
					this.SendPropertyChanged("CRMAccount_ActivityTargetId1");
					this.OnCRMAccount_ActivityTargetId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceLead_ActivityTargetId4", DbType="Int")]
		public System.Nullable<int> SourceLead_ActivityTargetId4
		{
			get
			{
				return this._SourceLead_ActivityTargetId4;
			}
			set
			{
				if ((this._SourceLead_ActivityTargetId4 != value))
				{
					if (this._ActivityTarget21.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceLead_ActivityTargetId4Changing(value);
					this.SendPropertyChanging();
					this._SourceLead_ActivityTargetId4 = value;
					this.SendPropertyChanged("SourceLead_ActivityTargetId4");
					this.OnSourceLead_ActivityTargetId4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget", Storage="_ActivityTargets", ThisKey="ActivityTargetId", OtherKey="Account_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets
		{
			get
			{
				return this._ActivityTargets;
			}
			set
			{
				this._ActivityTargets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget1", Storage="_ActivityTargets1", ThisKey="ActivityTargetId", OtherKey="BackRefCustomer_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets1
		{
			get
			{
				return this._ActivityTargets1;
			}
			set
			{
				this._ActivityTargets1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget2", Storage="_ActivityTargets2", ThisKey="ActivityTargetId", OtherKey="BackRefCustomer_ActivityTargetId1")]
		public EntitySet<ActivityTarget> ActivityTargets2
		{
			get
			{
				return this._ActivityTargets2;
			}
			set
			{
				this._ActivityTargets2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget3", Storage="_ActivityTargets3", ThisKey="ActivityTargetId", OtherKey="BackRefOpportunity_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets3
		{
			get
			{
				return this._ActivityTargets3;
			}
			set
			{
				this._ActivityTargets3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget4", Storage="_ActivityTargets4", ThisKey="ActivityTargetId", OtherKey="BackRefOpportunity_ActivityTargetId1")]
		public EntitySet<ActivityTarget> ActivityTargets4
		{
			get
			{
				return this._ActivityTargets4;
			}
			set
			{
				this._ActivityTargets4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget5", Storage="_ActivityTargets5", ThisKey="ActivityTargetId", OtherKey="CRMAccount_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets5
		{
			get
			{
				return this._ActivityTargets5;
			}
			set
			{
				this._ActivityTargets5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget6", Storage="_ActivityTargets6", ThisKey="ActivityTargetId", OtherKey="CRMAccount_ActivityTargetId1")]
		public EntitySet<ActivityTarget> ActivityTargets6
		{
			get
			{
				return this._ActivityTargets6;
			}
			set
			{
				this._ActivityTargets6.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget7", Storage="_ActivityTargets7", ThisKey="ActivityTargetId", OtherKey="CRMContact_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets7
		{
			get
			{
				return this._ActivityTargets7;
			}
			set
			{
				this._ActivityTargets7.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget8", Storage="_ActivityTargets8", ThisKey="ActivityTargetId", OtherKey="CRMContact_ActivityTargetId1")]
		public EntitySet<ActivityTarget> ActivityTargets8
		{
			get
			{
				return this._ActivityTargets8;
			}
			set
			{
				this._ActivityTargets8.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget9", Storage="_ActivityTargets9", ThisKey="ActivityTargetId", OtherKey="CRMOpportunity_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets9
		{
			get
			{
				return this._ActivityTargets9;
			}
			set
			{
				this._ActivityTargets9.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget10", Storage="_ActivityTargets10", ThisKey="ActivityTargetId", OtherKey="CRMOpportunity_ActivityTargetId1")]
		public EntitySet<ActivityTarget> ActivityTargets10
		{
			get
			{
				return this._ActivityTargets10;
			}
			set
			{
				this._ActivityTargets10.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget11", Storage="_ActivityTargets11", ThisKey="ActivityTargetId", OtherKey="Customer_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets11
		{
			get
			{
				return this._ActivityTargets11;
			}
			set
			{
				this._ActivityTargets11.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget12", Storage="_ActivityTargets12", ThisKey="ActivityTargetId", OtherKey="Customer_ActivityTargetId1")]
		public EntitySet<ActivityTarget> ActivityTargets12
		{
			get
			{
				return this._ActivityTargets12;
			}
			set
			{
				this._ActivityTargets12.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget13", Storage="_ActivityTargets13", ThisKey="ActivityTargetId", OtherKey="Opportunity_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets13
		{
			get
			{
				return this._ActivityTargets13;
			}
			set
			{
				this._ActivityTargets13.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget14", Storage="_ActivityTargets14", ThisKey="ActivityTargetId", OtherKey="PotentialCustomer_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets14
		{
			get
			{
				return this._ActivityTargets14;
			}
			set
			{
				this._ActivityTargets14.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget15", Storage="_ActivityTargets15", ThisKey="ActivityTargetId", OtherKey="PrimaryContact_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets15
		{
			get
			{
				return this._ActivityTargets15;
			}
			set
			{
				this._ActivityTargets15.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget16", Storage="_ActivityTargets16", ThisKey="ActivityTargetId", OtherKey="SourceLead_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets16
		{
			get
			{
				return this._ActivityTargets16;
			}
			set
			{
				this._ActivityTargets16.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget17", Storage="_ActivityTargets17", ThisKey="ActivityTargetId", OtherKey="SourceLead_ActivityTargetId1")]
		public EntitySet<ActivityTarget> ActivityTargets17
		{
			get
			{
				return this._ActivityTargets17;
			}
			set
			{
				this._ActivityTargets17.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget18", Storage="_ActivityTargets18", ThisKey="ActivityTargetId", OtherKey="SourceLead_ActivityTargetId2")]
		public EntitySet<ActivityTarget> ActivityTargets18
		{
			get
			{
				return this._ActivityTargets18;
			}
			set
			{
				this._ActivityTargets18.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget19", Storage="_ActivityTargets19", ThisKey="ActivityTargetId", OtherKey="SourceLead_ActivityTargetId3")]
		public EntitySet<ActivityTarget> ActivityTargets19
		{
			get
			{
				return this._ActivityTargets19;
			}
			set
			{
				this._ActivityTargets19.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget20", Storage="_ActivityTargets20", ThisKey="ActivityTargetId", OtherKey="SourceLead_ActivityTargetId4")]
		public EntitySet<ActivityTarget> ActivityTargets20
		{
			get
			{
				return this._ActivityTargets20;
			}
			set
			{
				this._ActivityTargets20.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget21", Storage="_ActivityTargets21", ThisKey="ActivityTargetId", OtherKey="SourceOpportunity_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets21
		{
			get
			{
				return this._ActivityTargets21;
			}
			set
			{
				this._ActivityTargets21.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget22", Storage="_ActivityTargets22", ThisKey="ActivityTargetId", OtherKey="SourceOpportunity_ActivityTargetId1")]
		public EntitySet<ActivityTarget> ActivityTargets22
		{
			get
			{
				return this._ActivityTargets22;
			}
			set
			{
				this._ActivityTargets22.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget23", Storage="_ActivityTargets23", ThisKey="ActivityTargetId", OtherKey="SourceOpportunity_ActivityTargetId2")]
		public EntitySet<ActivityTarget> ActivityTargets23
		{
			get
			{
				return this._ActivityTargets23;
			}
			set
			{
				this._ActivityTargets23.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget24", Storage="_ActivityTargets24", ThisKey="ActivityTargetId", OtherKey="SourceOrder_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets24
		{
			get
			{
				return this._ActivityTargets24;
			}
			set
			{
				this._ActivityTargets24.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget25", Storage="_ActivityTargets25", ThisKey="ActivityTargetId", OtherKey="SourceQuote_ActivityTargetId")]
		public EntitySet<ActivityTarget> ActivityTargets25
		{
			get
			{
				return this._ActivityTargets25;
			}
			set
			{
				this._ActivityTargets25.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Event", Storage="_Events", ThisKey="ActivityTargetId", OtherKey="Regarding_ActivityTargetId")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_LeadHistoryRecord", Storage="_LeadHistoryRecords", ThisKey="ActivityTargetId", OtherKey="CRMLead_ActivityTargetId")]
		public EntitySet<LeadHistoryRecord> LeadHistoryRecords
		{
			get
			{
				return this._LeadHistoryRecords;
			}
			set
			{
				this._LeadHistoryRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note", Storage="_Notes", ThisKey="ActivityTargetId", OtherKey="CRMAccount_ActivityTargetId")]
		public EntitySet<Note> Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				this._Notes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note1", Storage="_Notes1", ThisKey="ActivityTargetId", OtherKey="CRMContact_ActivityTargetId")]
		public EntitySet<Note> Notes1
		{
			get
			{
				return this._Notes1;
			}
			set
			{
				this._Notes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note2", Storage="_Notes2", ThisKey="ActivityTargetId", OtherKey="CRMInvoice_ActivityTargetId")]
		public EntitySet<Note> Notes2
		{
			get
			{
				return this._Notes2;
			}
			set
			{
				this._Notes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note3", Storage="_Notes3", ThisKey="ActivityTargetId", OtherKey="CRMLead_ActivityTargetId")]
		public EntitySet<Note> Notes3
		{
			get
			{
				return this._Notes3;
			}
			set
			{
				this._Notes3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note4", Storage="_Notes4", ThisKey="ActivityTargetId", OtherKey="CRMOpportunity_ActivityTargetId")]
		public EntitySet<Note> Notes4
		{
			get
			{
				return this._Notes4;
			}
			set
			{
				this._Notes4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note5", Storage="_Notes5", ThisKey="ActivityTargetId", OtherKey="CRMOrder_ActivityTargetId")]
		public EntitySet<Note> Notes5
		{
			get
			{
				return this._Notes5;
			}
			set
			{
				this._Notes5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note6", Storage="_Notes6", ThisKey="ActivityTargetId", OtherKey="CRMQuote_ActivityTargetId")]
		public EntitySet<Note> Notes6
		{
			get
			{
				return this._Notes6;
			}
			set
			{
				this._Notes6.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_SaleItem", Storage="_SaleItems", ThisKey="ActivityTargetId", OtherKey="SaleBase_ActivityTargetId")]
		public EntitySet<SaleItem> SaleItems
		{
			get
			{
				return this._SaleItems;
			}
			set
			{
				this._SaleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget", Storage="_ActivityTarget1", ThisKey="Account_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget1
		{
			get
			{
				return this._ActivityTarget1.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget1.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget1.Entity = null;
						previousValue.ActivityTargets.Remove(this);
					}
					this._ActivityTarget1.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets.Add(this);
						this._Account_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._Account_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget1", Storage="_ActivityTarget2", ThisKey="BackRefCustomer_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget2
		{
			get
			{
				return this._ActivityTarget2.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget2.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget2.Entity = null;
						previousValue.ActivityTargets1.Remove(this);
					}
					this._ActivityTarget2.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets1.Add(this);
						this._BackRefCustomer_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._BackRefCustomer_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget2", Storage="_ActivityTarget3", ThisKey="BackRefCustomer_ActivityTargetId1", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget3
		{
			get
			{
				return this._ActivityTarget3.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget3.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget3.Entity = null;
						previousValue.ActivityTargets2.Remove(this);
					}
					this._ActivityTarget3.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets2.Add(this);
						this._BackRefCustomer_ActivityTargetId1 = value.ActivityTargetId;
					}
					else
					{
						this._BackRefCustomer_ActivityTargetId1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget3", Storage="_ActivityTarget4", ThisKey="BackRefOpportunity_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget4
		{
			get
			{
				return this._ActivityTarget4.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget4.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget4.Entity = null;
						previousValue.ActivityTargets3.Remove(this);
					}
					this._ActivityTarget4.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets3.Add(this);
						this._BackRefOpportunity_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._BackRefOpportunity_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget4", Storage="_ActivityTarget5", ThisKey="BackRefOpportunity_ActivityTargetId1", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget5
		{
			get
			{
				return this._ActivityTarget5.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget5.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget5.Entity = null;
						previousValue.ActivityTargets4.Remove(this);
					}
					this._ActivityTarget5.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets4.Add(this);
						this._BackRefOpportunity_ActivityTargetId1 = value.ActivityTargetId;
					}
					else
					{
						this._BackRefOpportunity_ActivityTargetId1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget5", Storage="_ActivityTarget6", ThisKey="CRMAccount_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget6
		{
			get
			{
				return this._ActivityTarget6.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget6.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget6.Entity = null;
						previousValue.ActivityTargets5.Remove(this);
					}
					this._ActivityTarget6.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets5.Add(this);
						this._CRMAccount_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMAccount_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget6", Storage="_ActivityTarget7", ThisKey="CRMAccount_ActivityTargetId1", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget7
		{
			get
			{
				return this._ActivityTarget7.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget7.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget7.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget7.Entity = null;
						previousValue.ActivityTargets6.Remove(this);
					}
					this._ActivityTarget7.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets6.Add(this);
						this._CRMAccount_ActivityTargetId1 = value.ActivityTargetId;
					}
					else
					{
						this._CRMAccount_ActivityTargetId1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget7");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget7", Storage="_ActivityTarget8", ThisKey="CRMContact_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget8
		{
			get
			{
				return this._ActivityTarget8.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget8.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget8.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget8.Entity = null;
						previousValue.ActivityTargets7.Remove(this);
					}
					this._ActivityTarget8.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets7.Add(this);
						this._CRMContact_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMContact_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget8");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget8", Storage="_ActivityTarget9", ThisKey="CRMContact_ActivityTargetId1", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget9
		{
			get
			{
				return this._ActivityTarget9.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget9.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget9.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget9.Entity = null;
						previousValue.ActivityTargets8.Remove(this);
					}
					this._ActivityTarget9.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets8.Add(this);
						this._CRMContact_ActivityTargetId1 = value.ActivityTargetId;
					}
					else
					{
						this._CRMContact_ActivityTargetId1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget9");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget9", Storage="_ActivityTarget10", ThisKey="CRMOpportunity_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget10
		{
			get
			{
				return this._ActivityTarget10.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget10.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget10.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget10.Entity = null;
						previousValue.ActivityTargets9.Remove(this);
					}
					this._ActivityTarget10.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets9.Add(this);
						this._CRMOpportunity_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMOpportunity_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget10");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget10", Storage="_ActivityTarget11", ThisKey="CRMOpportunity_ActivityTargetId1", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget11
		{
			get
			{
				return this._ActivityTarget11.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget11.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget11.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget11.Entity = null;
						previousValue.ActivityTargets10.Remove(this);
					}
					this._ActivityTarget11.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets10.Add(this);
						this._CRMOpportunity_ActivityTargetId1 = value.ActivityTargetId;
					}
					else
					{
						this._CRMOpportunity_ActivityTargetId1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget11");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget11", Storage="_ActivityTarget12", ThisKey="Customer_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget12
		{
			get
			{
				return this._ActivityTarget12.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget12.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget12.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget12.Entity = null;
						previousValue.ActivityTargets11.Remove(this);
					}
					this._ActivityTarget12.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets11.Add(this);
						this._Customer_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._Customer_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget12");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget12", Storage="_ActivityTarget13", ThisKey="Customer_ActivityTargetId1", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget13
		{
			get
			{
				return this._ActivityTarget13.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget13.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget13.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget13.Entity = null;
						previousValue.ActivityTargets12.Remove(this);
					}
					this._ActivityTarget13.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets12.Add(this);
						this._Customer_ActivityTargetId1 = value.ActivityTargetId;
					}
					else
					{
						this._Customer_ActivityTargetId1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget13");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget13", Storage="_ActivityTarget14", ThisKey="Opportunity_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget14
		{
			get
			{
				return this._ActivityTarget14.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget14.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget14.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget14.Entity = null;
						previousValue.ActivityTargets13.Remove(this);
					}
					this._ActivityTarget14.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets13.Add(this);
						this._Opportunity_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._Opportunity_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget14");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget14", Storage="_ActivityTarget15", ThisKey="PotentialCustomer_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget15
		{
			get
			{
				return this._ActivityTarget15.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget15.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget15.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget15.Entity = null;
						previousValue.ActivityTargets14.Remove(this);
					}
					this._ActivityTarget15.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets14.Add(this);
						this._PotentialCustomer_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._PotentialCustomer_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget15");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget15", Storage="_ActivityTarget16", ThisKey="PrimaryContact_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget16
		{
			get
			{
				return this._ActivityTarget16.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget16.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget16.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget16.Entity = null;
						previousValue.ActivityTargets15.Remove(this);
					}
					this._ActivityTarget16.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets15.Add(this);
						this._PrimaryContact_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._PrimaryContact_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget16");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget16", Storage="_ActivityTarget17", ThisKey="SourceLead_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget17
		{
			get
			{
				return this._ActivityTarget17.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget17.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget17.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget17.Entity = null;
						previousValue.ActivityTargets16.Remove(this);
					}
					this._ActivityTarget17.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets16.Add(this);
						this._SourceLead_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._SourceLead_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget17");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget17", Storage="_ActivityTarget18", ThisKey="SourceLead_ActivityTargetId1", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget18
		{
			get
			{
				return this._ActivityTarget18.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget18.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget18.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget18.Entity = null;
						previousValue.ActivityTargets17.Remove(this);
					}
					this._ActivityTarget18.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets17.Add(this);
						this._SourceLead_ActivityTargetId1 = value.ActivityTargetId;
					}
					else
					{
						this._SourceLead_ActivityTargetId1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget18");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget18", Storage="_ActivityTarget19", ThisKey="SourceLead_ActivityTargetId2", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget19
		{
			get
			{
				return this._ActivityTarget19.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget19.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget19.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget19.Entity = null;
						previousValue.ActivityTargets18.Remove(this);
					}
					this._ActivityTarget19.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets18.Add(this);
						this._SourceLead_ActivityTargetId2 = value.ActivityTargetId;
					}
					else
					{
						this._SourceLead_ActivityTargetId2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget19");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget19", Storage="_ActivityTarget20", ThisKey="SourceLead_ActivityTargetId3", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget20
		{
			get
			{
				return this._ActivityTarget20.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget20.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget20.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget20.Entity = null;
						previousValue.ActivityTargets19.Remove(this);
					}
					this._ActivityTarget20.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets19.Add(this);
						this._SourceLead_ActivityTargetId3 = value.ActivityTargetId;
					}
					else
					{
						this._SourceLead_ActivityTargetId3 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget20");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget20", Storage="_ActivityTarget21", ThisKey="SourceLead_ActivityTargetId4", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget21
		{
			get
			{
				return this._ActivityTarget21.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget21.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget21.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget21.Entity = null;
						previousValue.ActivityTargets20.Remove(this);
					}
					this._ActivityTarget21.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets20.Add(this);
						this._SourceLead_ActivityTargetId4 = value.ActivityTargetId;
					}
					else
					{
						this._SourceLead_ActivityTargetId4 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget21");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget21", Storage="_ActivityTarget22", ThisKey="SourceOpportunity_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget22
		{
			get
			{
				return this._ActivityTarget22.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget22.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget22.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget22.Entity = null;
						previousValue.ActivityTargets21.Remove(this);
					}
					this._ActivityTarget22.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets21.Add(this);
						this._SourceOpportunity_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._SourceOpportunity_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget22");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget22", Storage="_ActivityTarget23", ThisKey="SourceOpportunity_ActivityTargetId1", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget23
		{
			get
			{
				return this._ActivityTarget23.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget23.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget23.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget23.Entity = null;
						previousValue.ActivityTargets22.Remove(this);
					}
					this._ActivityTarget23.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets22.Add(this);
						this._SourceOpportunity_ActivityTargetId1 = value.ActivityTargetId;
					}
					else
					{
						this._SourceOpportunity_ActivityTargetId1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget23");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget23", Storage="_ActivityTarget24", ThisKey="SourceOpportunity_ActivityTargetId2", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget24
		{
			get
			{
				return this._ActivityTarget24.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget24.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget24.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget24.Entity = null;
						previousValue.ActivityTargets23.Remove(this);
					}
					this._ActivityTarget24.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets23.Add(this);
						this._SourceOpportunity_ActivityTargetId2 = value.ActivityTargetId;
					}
					else
					{
						this._SourceOpportunity_ActivityTargetId2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget24");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget24", Storage="_ActivityTarget25", ThisKey="SourceOrder_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget25
		{
			get
			{
				return this._ActivityTarget25.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget25.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget25.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget25.Entity = null;
						previousValue.ActivityTargets24.Remove(this);
					}
					this._ActivityTarget25.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets24.Add(this);
						this._SourceOrder_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._SourceOrder_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget25");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_ActivityTarget25", Storage="_ActivityTarget26", ThisKey="SourceQuote_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget26
		{
			get
			{
				return this._ActivityTarget26.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget26.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget26.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget26.Entity = null;
						previousValue.ActivityTargets25.Remove(this);
					}
					this._ActivityTarget26.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets25.Add(this);
						this._SourceQuote_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._SourceQuote_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget26");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ActivityTarget", Storage="_User", ThisKey="Owner_ID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ActivityTargets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets.Add(this);
						this._Owner_ID = value.ID;
					}
					else
					{
						this._Owner_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ActivityTarget1", Storage="_User1", ThisKey="Owner_ID1", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ActivityTargets1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets1.Add(this);
						this._Owner_ID1 = value.ID;
					}
					else
					{
						this._Owner_ID1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ActivityTarget2", Storage="_User2", ThisKey="Owner_ID2", OtherKey="ID", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.ActivityTargets2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets2.Add(this);
						this._Owner_ID2 = value.ID;
					}
					else
					{
						this._Owner_ID2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget", Storage="_Address", ThisKey="BillToAddress_ID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.ActivityTargets.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets.Add(this);
						this._BillToAddress_ID = value.ID;
					}
					else
					{
						this._BillToAddress_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget1", Storage="_Address1", ThisKey="BillToAddress_ID1", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.ActivityTargets1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets1.Add(this);
						this._BillToAddress_ID1 = value.ID;
					}
					else
					{
						this._BillToAddress_ID1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget2", Storage="_Address2", ThisKey="BillToAddress_ID2", OtherKey="ID", IsForeignKey=true)]
		public Address Address2
		{
			get
			{
				return this._Address2.Entity;
			}
			set
			{
				Address previousValue = this._Address2.Entity;
				if (((previousValue != value) 
							|| (this._Address2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address2.Entity = null;
						previousValue.ActivityTargets2.Remove(this);
					}
					this._Address2.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets2.Add(this);
						this._BillToAddress_ID2 = value.ID;
					}
					else
					{
						this._BillToAddress_ID2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget3", Storage="_Address3", ThisKey="BillToAddress_ID3", OtherKey="ID", IsForeignKey=true)]
		public Address Address3
		{
			get
			{
				return this._Address3.Entity;
			}
			set
			{
				Address previousValue = this._Address3.Entity;
				if (((previousValue != value) 
							|| (this._Address3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address3.Entity = null;
						previousValue.ActivityTargets3.Remove(this);
					}
					this._Address3.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets3.Add(this);
						this._BillToAddress_ID3 = value.ID;
					}
					else
					{
						this._BillToAddress_ID3 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget4", Storage="_Address4", ThisKey="PrimaryAddress_ID", OtherKey="ID", IsForeignKey=true)]
		public Address Address4
		{
			get
			{
				return this._Address4.Entity;
			}
			set
			{
				Address previousValue = this._Address4.Entity;
				if (((previousValue != value) 
							|| (this._Address4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address4.Entity = null;
						previousValue.ActivityTargets4.Remove(this);
					}
					this._Address4.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets4.Add(this);
						this._PrimaryAddress_ID = value.ID;
					}
					else
					{
						this._PrimaryAddress_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget5", Storage="_Address5", ThisKey="PrimaryAddress_ID1", OtherKey="ID", IsForeignKey=true)]
		public Address Address5
		{
			get
			{
				return this._Address5.Entity;
			}
			set
			{
				Address previousValue = this._Address5.Entity;
				if (((previousValue != value) 
							|| (this._Address5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address5.Entity = null;
						previousValue.ActivityTargets5.Remove(this);
					}
					this._Address5.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets5.Add(this);
						this._PrimaryAddress_ID1 = value.ID;
					}
					else
					{
						this._PrimaryAddress_ID1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget6", Storage="_Address6", ThisKey="PrimaryAddress_ID2", OtherKey="ID", IsForeignKey=true)]
		public Address Address6
		{
			get
			{
				return this._Address6.Entity;
			}
			set
			{
				Address previousValue = this._Address6.Entity;
				if (((previousValue != value) 
							|| (this._Address6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address6.Entity = null;
						previousValue.ActivityTargets6.Remove(this);
					}
					this._Address6.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets6.Add(this);
						this._PrimaryAddress_ID2 = value.ID;
					}
					else
					{
						this._PrimaryAddress_ID2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget7", Storage="_Address7", ThisKey="ShipToAddress_ID", OtherKey="ID", IsForeignKey=true)]
		public Address Address7
		{
			get
			{
				return this._Address7.Entity;
			}
			set
			{
				Address previousValue = this._Address7.Entity;
				if (((previousValue != value) 
							|| (this._Address7.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address7.Entity = null;
						previousValue.ActivityTargets7.Remove(this);
					}
					this._Address7.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets7.Add(this);
						this._ShipToAddress_ID = value.ID;
					}
					else
					{
						this._ShipToAddress_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address7");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget8", Storage="_Address8", ThisKey="ShipToAddress_ID1", OtherKey="ID", IsForeignKey=true)]
		public Address Address8
		{
			get
			{
				return this._Address8.Entity;
			}
			set
			{
				Address previousValue = this._Address8.Entity;
				if (((previousValue != value) 
							|| (this._Address8.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address8.Entity = null;
						previousValue.ActivityTargets8.Remove(this);
					}
					this._Address8.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets8.Add(this);
						this._ShipToAddress_ID1 = value.ID;
					}
					else
					{
						this._ShipToAddress_ID1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address8");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget9", Storage="_Address9", ThisKey="ShipToAddress_ID2", OtherKey="ID", IsForeignKey=true)]
		public Address Address9
		{
			get
			{
				return this._Address9.Entity;
			}
			set
			{
				Address previousValue = this._Address9.Entity;
				if (((previousValue != value) 
							|| (this._Address9.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address9.Entity = null;
						previousValue.ActivityTargets9.Remove(this);
					}
					this._Address9.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets9.Add(this);
						this._ShipToAddress_ID2 = value.ID;
					}
					else
					{
						this._ShipToAddress_ID2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address9");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget10", Storage="_Address10", ThisKey="ShipToAddress_ID3", OtherKey="ID", IsForeignKey=true)]
		public Address Address10
		{
			get
			{
				return this._Address10.Entity;
			}
			set
			{
				Address previousValue = this._Address10.Entity;
				if (((previousValue != value) 
							|| (this._Address10.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address10.Entity = null;
						previousValue.ActivityTargets10.Remove(this);
					}
					this._Address10.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets10.Add(this);
						this._ShipToAddress_ID3 = value.ID;
					}
					else
					{
						this._ShipToAddress_ID3 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address10");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_ActivityTarget", Storage="_People", ThisKey="Person_ID", OtherKey="ID", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.ActivityTargets.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.ActivityTargets.Add(this);
						this._Person_ID = value.ID;
					}
					else
					{
						this._Person_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityTargets(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget1 = this;
		}
		
		private void detach_ActivityTargets(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget1 = null;
		}
		
		private void attach_ActivityTargets1(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget2 = this;
		}
		
		private void detach_ActivityTargets1(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget2 = null;
		}
		
		private void attach_ActivityTargets2(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget3 = this;
		}
		
		private void detach_ActivityTargets2(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget3 = null;
		}
		
		private void attach_ActivityTargets3(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget4 = this;
		}
		
		private void detach_ActivityTargets3(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget4 = null;
		}
		
		private void attach_ActivityTargets4(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget5 = this;
		}
		
		private void detach_ActivityTargets4(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget5 = null;
		}
		
		private void attach_ActivityTargets5(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget6 = this;
		}
		
		private void detach_ActivityTargets5(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget6 = null;
		}
		
		private void attach_ActivityTargets6(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget7 = this;
		}
		
		private void detach_ActivityTargets6(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget7 = null;
		}
		
		private void attach_ActivityTargets7(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget8 = this;
		}
		
		private void detach_ActivityTargets7(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget8 = null;
		}
		
		private void attach_ActivityTargets8(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget9 = this;
		}
		
		private void detach_ActivityTargets8(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget9 = null;
		}
		
		private void attach_ActivityTargets9(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget10 = this;
		}
		
		private void detach_ActivityTargets9(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget10 = null;
		}
		
		private void attach_ActivityTargets10(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget11 = this;
		}
		
		private void detach_ActivityTargets10(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget11 = null;
		}
		
		private void attach_ActivityTargets11(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget12 = this;
		}
		
		private void detach_ActivityTargets11(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget12 = null;
		}
		
		private void attach_ActivityTargets12(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget13 = this;
		}
		
		private void detach_ActivityTargets12(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget13 = null;
		}
		
		private void attach_ActivityTargets13(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget14 = this;
		}
		
		private void detach_ActivityTargets13(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget14 = null;
		}
		
		private void attach_ActivityTargets14(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget15 = this;
		}
		
		private void detach_ActivityTargets14(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget15 = null;
		}
		
		private void attach_ActivityTargets15(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget16 = this;
		}
		
		private void detach_ActivityTargets15(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget16 = null;
		}
		
		private void attach_ActivityTargets16(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget17 = this;
		}
		
		private void detach_ActivityTargets16(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget17 = null;
		}
		
		private void attach_ActivityTargets17(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget18 = this;
		}
		
		private void detach_ActivityTargets17(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget18 = null;
		}
		
		private void attach_ActivityTargets18(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget19 = this;
		}
		
		private void detach_ActivityTargets18(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget19 = null;
		}
		
		private void attach_ActivityTargets19(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget20 = this;
		}
		
		private void detach_ActivityTargets19(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget20 = null;
		}
		
		private void attach_ActivityTargets20(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget21 = this;
		}
		
		private void detach_ActivityTargets20(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget21 = null;
		}
		
		private void attach_ActivityTargets21(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget22 = this;
		}
		
		private void detach_ActivityTargets21(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget22 = null;
		}
		
		private void attach_ActivityTargets22(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget23 = this;
		}
		
		private void detach_ActivityTargets22(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget23 = null;
		}
		
		private void attach_ActivityTargets23(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget24 = this;
		}
		
		private void detach_ActivityTargets23(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget24 = null;
		}
		
		private void attach_ActivityTargets24(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget25 = this;
		}
		
		private void detach_ActivityTargets24(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget25 = null;
		}
		
		private void attach_ActivityTargets25(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget26 = this;
		}
		
		private void detach_ActivityTargets25(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget26 = null;
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget = null;
		}
		
		private void attach_LeadHistoryRecords(LeadHistoryRecord entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget = this;
		}
		
		private void detach_LeadHistoryRecords(LeadHistoryRecord entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget = null;
		}
		
		private void attach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget = this;
		}
		
		private void detach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget = null;
		}
		
		private void attach_Notes1(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget1 = this;
		}
		
		private void detach_Notes1(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget1 = null;
		}
		
		private void attach_Notes2(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget2 = this;
		}
		
		private void detach_Notes2(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget2 = null;
		}
		
		private void attach_Notes3(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget3 = this;
		}
		
		private void detach_Notes3(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget3 = null;
		}
		
		private void attach_Notes4(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget4 = this;
		}
		
		private void detach_Notes4(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget4 = null;
		}
		
		private void attach_Notes5(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget5 = this;
		}
		
		private void detach_Notes5(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget5 = null;
		}
		
		private void attach_Notes6(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget6 = this;
		}
		
		private void detach_Notes6(Note entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget6 = null;
		}
		
		private void attach_SaleItems(SaleItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget = this;
		}
		
		private void detach_SaleItems(SaleItem entity)
		{
			this.SendPropertyChanging();
			entity.ActivityTarget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private bool _IsActive;
		
		private bool _ChangePasswordOnFirstLogon;
		
		private string _StoredPassword;
		
		private string _Discriminator;
		
		private System.Nullable<int> _Person_ID;
		
		private EntitySet<ActivityTarget> _ActivityTargets;
		
		private EntitySet<ActivityTarget> _ActivityTargets1;
		
		private EntitySet<ActivityTarget> _ActivityTargets2;
		
		private EntitySet<Event> _Events;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntityRef<People> _People;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnChangePasswordOnFirstLogonChanging(bool value);
    partial void OnChangePasswordOnFirstLogonChanged();
    partial void OnStoredPasswordChanging(string value);
    partial void OnStoredPasswordChanged();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    partial void OnPerson_IDChanging(System.Nullable<int> value);
    partial void OnPerson_IDChanged();
    #endregion
		
		public User()
		{
			this._ActivityTargets = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets), new Action<ActivityTarget>(this.detach_ActivityTargets));
			this._ActivityTargets1 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets1), new Action<ActivityTarget>(this.detach_ActivityTargets1));
			this._ActivityTargets2 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets2), new Action<ActivityTarget>(this.detach_ActivityTargets2));
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._People = default(EntityRef<People>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePasswordOnFirstLogon", DbType="Bit NOT NULL")]
		public bool ChangePasswordOnFirstLogon
		{
			get
			{
				return this._ChangePasswordOnFirstLogon;
			}
			set
			{
				if ((this._ChangePasswordOnFirstLogon != value))
				{
					this.OnChangePasswordOnFirstLogonChanging(value);
					this.SendPropertyChanging();
					this._ChangePasswordOnFirstLogon = value;
					this.SendPropertyChanged("ChangePasswordOnFirstLogon");
					this.OnChangePasswordOnFirstLogonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoredPassword", DbType="NVarChar(MAX)")]
		public string StoredPassword
		{
			get
			{
				return this._StoredPassword;
			}
			set
			{
				if ((this._StoredPassword != value))
				{
					this.OnStoredPasswordChanging(value);
					this.SendPropertyChanging();
					this._StoredPassword = value;
					this.SendPropertyChanged("StoredPassword");
					this.OnStoredPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_ID", DbType="Int")]
		public System.Nullable<int> Person_ID
		{
			get
			{
				return this._Person_ID;
			}
			set
			{
				if ((this._Person_ID != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPerson_IDChanging(value);
					this.SendPropertyChanging();
					this._Person_ID = value;
					this.SendPropertyChanged("Person_ID");
					this.OnPerson_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ActivityTarget", Storage="_ActivityTargets", ThisKey="ID", OtherKey="Owner_ID")]
		public EntitySet<ActivityTarget> ActivityTargets
		{
			get
			{
				return this._ActivityTargets;
			}
			set
			{
				this._ActivityTargets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ActivityTarget1", Storage="_ActivityTargets1", ThisKey="ID", OtherKey="Owner_ID1")]
		public EntitySet<ActivityTarget> ActivityTargets1
		{
			get
			{
				return this._ActivityTargets1;
			}
			set
			{
				this._ActivityTargets1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ActivityTarget2", Storage="_ActivityTargets2", ThisKey="ID", OtherKey="Owner_ID2")]
		public EntitySet<ActivityTarget> ActivityTargets2
		{
			get
			{
				return this._ActivityTargets2;
			}
			set
			{
				this._ActivityTargets2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Event", Storage="_Events", ThisKey="ID", OtherKey="Owner_ID")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoles", ThisKey="ID", OtherKey="User_ID")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_User", Storage="_People", ThisKey="Person_ID", OtherKey="ID", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Person_ID = value.ID;
					}
					else
					{
						this._Person_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityTargets(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ActivityTargets(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ActivityTargets1(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ActivityTargets1(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_ActivityTargets2(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_ActivityTargets2(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Addresses")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Street1;
		
		private string _Street2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Country;
		
		private EntitySet<ActivityTarget> _ActivityTargets;
		
		private EntitySet<ActivityTarget> _ActivityTargets1;
		
		private EntitySet<ActivityTarget> _ActivityTargets2;
		
		private EntitySet<ActivityTarget> _ActivityTargets3;
		
		private EntitySet<ActivityTarget> _ActivityTargets4;
		
		private EntitySet<ActivityTarget> _ActivityTargets5;
		
		private EntitySet<ActivityTarget> _ActivityTargets6;
		
		private EntitySet<ActivityTarget> _ActivityTargets7;
		
		private EntitySet<ActivityTarget> _ActivityTargets8;
		
		private EntitySet<ActivityTarget> _ActivityTargets9;
		
		private EntitySet<ActivityTarget> _ActivityTargets10;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStreet1Changing(string value);
    partial void OnStreet1Changed();
    partial void OnStreet2Changing(string value);
    partial void OnStreet2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public Address()
		{
			this._ActivityTargets = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets), new Action<ActivityTarget>(this.detach_ActivityTargets));
			this._ActivityTargets1 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets1), new Action<ActivityTarget>(this.detach_ActivityTargets1));
			this._ActivityTargets2 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets2), new Action<ActivityTarget>(this.detach_ActivityTargets2));
			this._ActivityTargets3 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets3), new Action<ActivityTarget>(this.detach_ActivityTargets3));
			this._ActivityTargets4 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets4), new Action<ActivityTarget>(this.detach_ActivityTargets4));
			this._ActivityTargets5 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets5), new Action<ActivityTarget>(this.detach_ActivityTargets5));
			this._ActivityTargets6 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets6), new Action<ActivityTarget>(this.detach_ActivityTargets6));
			this._ActivityTargets7 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets7), new Action<ActivityTarget>(this.detach_ActivityTargets7));
			this._ActivityTargets8 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets8), new Action<ActivityTarget>(this.detach_ActivityTargets8));
			this._ActivityTargets9 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets9), new Action<ActivityTarget>(this.detach_ActivityTargets9));
			this._ActivityTargets10 = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets10), new Action<ActivityTarget>(this.detach_ActivityTargets10));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street1", DbType="NVarChar(MAX)")]
		public string Street1
		{
			get
			{
				return this._Street1;
			}
			set
			{
				if ((this._Street1 != value))
				{
					this.OnStreet1Changing(value);
					this.SendPropertyChanging();
					this._Street1 = value;
					this.SendPropertyChanged("Street1");
					this.OnStreet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street2", DbType="NVarChar(MAX)")]
		public string Street2
		{
			get
			{
				return this._Street2;
			}
			set
			{
				if ((this._Street2 != value))
				{
					this.OnStreet2Changing(value);
					this.SendPropertyChanging();
					this._Street2 = value;
					this.SendPropertyChanged("Street2");
					this.OnStreet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(MAX)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(MAX)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget", Storage="_ActivityTargets", ThisKey="ID", OtherKey="BillToAddress_ID")]
		public EntitySet<ActivityTarget> ActivityTargets
		{
			get
			{
				return this._ActivityTargets;
			}
			set
			{
				this._ActivityTargets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget1", Storage="_ActivityTargets1", ThisKey="ID", OtherKey="BillToAddress_ID1")]
		public EntitySet<ActivityTarget> ActivityTargets1
		{
			get
			{
				return this._ActivityTargets1;
			}
			set
			{
				this._ActivityTargets1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget2", Storage="_ActivityTargets2", ThisKey="ID", OtherKey="BillToAddress_ID2")]
		public EntitySet<ActivityTarget> ActivityTargets2
		{
			get
			{
				return this._ActivityTargets2;
			}
			set
			{
				this._ActivityTargets2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget3", Storage="_ActivityTargets3", ThisKey="ID", OtherKey="BillToAddress_ID3")]
		public EntitySet<ActivityTarget> ActivityTargets3
		{
			get
			{
				return this._ActivityTargets3;
			}
			set
			{
				this._ActivityTargets3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget4", Storage="_ActivityTargets4", ThisKey="ID", OtherKey="PrimaryAddress_ID")]
		public EntitySet<ActivityTarget> ActivityTargets4
		{
			get
			{
				return this._ActivityTargets4;
			}
			set
			{
				this._ActivityTargets4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget5", Storage="_ActivityTargets5", ThisKey="ID", OtherKey="PrimaryAddress_ID1")]
		public EntitySet<ActivityTarget> ActivityTargets5
		{
			get
			{
				return this._ActivityTargets5;
			}
			set
			{
				this._ActivityTargets5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget6", Storage="_ActivityTargets6", ThisKey="ID", OtherKey="PrimaryAddress_ID2")]
		public EntitySet<ActivityTarget> ActivityTargets6
		{
			get
			{
				return this._ActivityTargets6;
			}
			set
			{
				this._ActivityTargets6.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget7", Storage="_ActivityTargets7", ThisKey="ID", OtherKey="ShipToAddress_ID")]
		public EntitySet<ActivityTarget> ActivityTargets7
		{
			get
			{
				return this._ActivityTargets7;
			}
			set
			{
				this._ActivityTargets7.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget8", Storage="_ActivityTargets8", ThisKey="ID", OtherKey="ShipToAddress_ID1")]
		public EntitySet<ActivityTarget> ActivityTargets8
		{
			get
			{
				return this._ActivityTargets8;
			}
			set
			{
				this._ActivityTargets8.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget9", Storage="_ActivityTargets9", ThisKey="ID", OtherKey="ShipToAddress_ID2")]
		public EntitySet<ActivityTarget> ActivityTargets9
		{
			get
			{
				return this._ActivityTargets9;
			}
			set
			{
				this._ActivityTargets9.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_ActivityTarget10", Storage="_ActivityTargets10", ThisKey="ID", OtherKey="ShipToAddress_ID3")]
		public EntitySet<ActivityTarget> ActivityTargets10
		{
			get
			{
				return this._ActivityTargets10;
			}
			set
			{
				this._ActivityTargets10.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityTargets(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_ActivityTargets(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_ActivityTargets1(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_ActivityTargets1(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
		
		private void attach_ActivityTargets2(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address2 = this;
		}
		
		private void detach_ActivityTargets2(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address2 = null;
		}
		
		private void attach_ActivityTargets3(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address3 = this;
		}
		
		private void detach_ActivityTargets3(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address3 = null;
		}
		
		private void attach_ActivityTargets4(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address4 = this;
		}
		
		private void detach_ActivityTargets4(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address4 = null;
		}
		
		private void attach_ActivityTargets5(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address5 = this;
		}
		
		private void detach_ActivityTargets5(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address5 = null;
		}
		
		private void attach_ActivityTargets6(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address6 = this;
		}
		
		private void detach_ActivityTargets6(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address6 = null;
		}
		
		private void attach_ActivityTargets7(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address7 = this;
		}
		
		private void detach_ActivityTargets7(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address7 = null;
		}
		
		private void attach_ActivityTargets8(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address8 = this;
		}
		
		private void detach_ActivityTargets8(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address8 = null;
		}
		
		private void attach_ActivityTargets9(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address9 = this;
		}
		
		private void detach_ActivityTargets9(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address9 = null;
		}
		
		private void attach_ActivityTargets10(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address10 = this;
		}
		
		private void detach_ActivityTargets10(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.Address10 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Events")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Subject;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartOn;
		
		private System.Nullable<System.DateTime> _EndOn;
		
		private bool _AllDay;
		
		private string _Location;
		
		private int _Label;
		
		private int _Status;
		
		private int _Type;
		
		private string _RecurrenceInfoXml;
		
		private string _ReminderInfoXml;
		
		private int _RemindInSeconds;
		
		private System.Nullable<System.DateTime> _AlarmTime;
		
		private bool _IsPostponed;
		
		private string _Discriminator;
		
		private System.Nullable<int> _Owner_ID;
		
		private System.Nullable<int> _RecurrencePattern_ID;
		
		private System.Nullable<int> _Regarding_ActivityTargetId;
		
		private EntitySet<Event> _Events;
		
		private EntitySet<Note> _Notes;
		
		private EntitySet<ResourceEvent> _ResourceEvents;
		
		private EntityRef<ActivityTarget> _ActivityTarget;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartOnChanging(System.Nullable<System.DateTime> value);
    partial void OnStartOnChanged();
    partial void OnEndOnChanging(System.Nullable<System.DateTime> value);
    partial void OnEndOnChanged();
    partial void OnAllDayChanging(bool value);
    partial void OnAllDayChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnLabelChanging(int value);
    partial void OnLabelChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnRecurrenceInfoXmlChanging(string value);
    partial void OnRecurrenceInfoXmlChanged();
    partial void OnReminderInfoXmlChanging(string value);
    partial void OnReminderInfoXmlChanged();
    partial void OnRemindInSecondsChanging(int value);
    partial void OnRemindInSecondsChanged();
    partial void OnAlarmTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAlarmTimeChanged();
    partial void OnIsPostponedChanging(bool value);
    partial void OnIsPostponedChanged();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    partial void OnOwner_IDChanging(System.Nullable<int> value);
    partial void OnOwner_IDChanged();
    partial void OnRecurrencePattern_IDChanging(System.Nullable<int> value);
    partial void OnRecurrencePattern_IDChanged();
    partial void OnRegarding_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnRegarding_ActivityTargetIdChanged();
    #endregion
		
		public Event()
		{
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			this._Notes = new EntitySet<Note>(new Action<Note>(this.attach_Notes), new Action<Note>(this.detach_Notes));
			this._ResourceEvents = new EntitySet<ResourceEvent>(new Action<ResourceEvent>(this.attach_ResourceEvents), new Action<ResourceEvent>(this.detach_ResourceEvents));
			this._ActivityTarget = default(EntityRef<ActivityTarget>);
			this._Event1 = default(EntityRef<Event>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(MAX)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this.OnStartOnChanging(value);
					this.SendPropertyChanging();
					this._StartOn = value;
					this.SendPropertyChanged("StartOn");
					this.OnStartOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndOn
		{
			get
			{
				return this._EndOn;
			}
			set
			{
				if ((this._EndOn != value))
				{
					this.OnEndOnChanging(value);
					this.SendPropertyChanging();
					this._EndOn = value;
					this.SendPropertyChanged("EndOn");
					this.OnEndOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit NOT NULL")]
		public bool AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(MAX)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="Int NOT NULL")]
		public int Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceInfoXml", DbType="NVarChar(MAX)")]
		public string RecurrenceInfoXml
		{
			get
			{
				return this._RecurrenceInfoXml;
			}
			set
			{
				if ((this._RecurrenceInfoXml != value))
				{
					this.OnRecurrenceInfoXmlChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceInfoXml = value;
					this.SendPropertyChanged("RecurrenceInfoXml");
					this.OnRecurrenceInfoXmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderInfoXml", DbType="NVarChar(MAX)")]
		public string ReminderInfoXml
		{
			get
			{
				return this._ReminderInfoXml;
			}
			set
			{
				if ((this._ReminderInfoXml != value))
				{
					this.OnReminderInfoXmlChanging(value);
					this.SendPropertyChanging();
					this._ReminderInfoXml = value;
					this.SendPropertyChanged("ReminderInfoXml");
					this.OnReminderInfoXmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemindInSeconds", DbType="Int NOT NULL")]
		public int RemindInSeconds
		{
			get
			{
				return this._RemindInSeconds;
			}
			set
			{
				if ((this._RemindInSeconds != value))
				{
					this.OnRemindInSecondsChanging(value);
					this.SendPropertyChanging();
					this._RemindInSeconds = value;
					this.SendPropertyChanged("RemindInSeconds");
					this.OnRemindInSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlarmTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlarmTime
		{
			get
			{
				return this._AlarmTime;
			}
			set
			{
				if ((this._AlarmTime != value))
				{
					this.OnAlarmTimeChanging(value);
					this.SendPropertyChanging();
					this._AlarmTime = value;
					this.SendPropertyChanged("AlarmTime");
					this.OnAlarmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPostponed", DbType="Bit NOT NULL")]
		public bool IsPostponed
		{
			get
			{
				return this._IsPostponed;
			}
			set
			{
				if ((this._IsPostponed != value))
				{
					this.OnIsPostponedChanging(value);
					this.SendPropertyChanging();
					this._IsPostponed = value;
					this.SendPropertyChanged("IsPostponed");
					this.OnIsPostponedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner_ID", DbType="Int")]
		public System.Nullable<int> Owner_ID
		{
			get
			{
				return this._Owner_ID;
			}
			set
			{
				if ((this._Owner_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwner_IDChanging(value);
					this.SendPropertyChanging();
					this._Owner_ID = value;
					this.SendPropertyChanged("Owner_ID");
					this.OnOwner_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrencePattern_ID", DbType="Int")]
		public System.Nullable<int> RecurrencePattern_ID
		{
			get
			{
				return this._RecurrencePattern_ID;
			}
			set
			{
				if ((this._RecurrencePattern_ID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecurrencePattern_IDChanging(value);
					this.SendPropertyChanging();
					this._RecurrencePattern_ID = value;
					this.SendPropertyChanged("RecurrencePattern_ID");
					this.OnRecurrencePattern_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regarding_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> Regarding_ActivityTargetId
		{
			get
			{
				return this._Regarding_ActivityTargetId;
			}
			set
			{
				if ((this._Regarding_ActivityTargetId != value))
				{
					if (this._ActivityTarget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegarding_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._Regarding_ActivityTargetId = value;
					this.SendPropertyChanged("Regarding_ActivityTargetId");
					this.OnRegarding_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Event", Storage="_Events", ThisKey="ID", OtherKey="RecurrencePattern_ID")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Note", Storage="_Notes", ThisKey="ID", OtherKey="CRMActivity_ID")]
		public EntitySet<Note> Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				this._Notes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_ResourceEvent", Storage="_ResourceEvents", ThisKey="ID", OtherKey="Event_ID")]
		public EntitySet<ResourceEvent> ResourceEvents
		{
			get
			{
				return this._ResourceEvents;
			}
			set
			{
				this._ResourceEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Event", Storage="_ActivityTarget", ThisKey="Regarding_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget
		{
			get
			{
				return this._ActivityTarget.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._ActivityTarget.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._Regarding_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._Regarding_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Event", Storage="_Event1", ThisKey="RecurrencePattern_ID", OtherKey="ID", IsForeignKey=true)]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._RecurrencePattern_ID = value.ID;
					}
					else
					{
						this._RecurrencePattern_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Event", Storage="_User", ThisKey="Owner_ID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._Owner_ID = value.ID;
					}
					else
					{
						this._Owner_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void attach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
		
		private void attach_ResourceEvents(ResourceEvent entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_ResourceEvents(ResourceEvent entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileDatas")]
	public partial class FileData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Size;
		
		private string _FileName;
		
		private System.Data.Linq.Binary _Content;
		
		private EntitySet<Note> _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSizeChanging(int value);
    partial void OnSizeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    #endregion
		
		public FileData()
		{
			this._Notes = new EntitySet<Note>(new Action<Note>(this.attach_Notes), new Action<Note>(this.detach_Notes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(MAX)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileData_Note", Storage="_Notes", ThisKey="ID", OtherKey="Attachment_ID")]
		public EntitySet<Note> Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				this._Notes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.FileData = this;
		}
		
		private void detach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.FileData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HCategories")]
	public partial class HCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Image;
		
		private string _Description;
		
		private string _Discriminator;
		
		private System.Nullable<int> _Parent_ID;
		
		private EntitySet<HCategory> _HCategories;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<HCategory> _HCategory1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    partial void OnParent_IDChanging(System.Nullable<int> value);
    partial void OnParent_IDChanged();
    #endregion
		
		public HCategory()
		{
			this._HCategories = new EntitySet<HCategory>(new Action<HCategory>(this.attach_HCategories), new Action<HCategory>(this.detach_HCategories));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._HCategory1 = default(EntityRef<HCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_ID", DbType="Int")]
		public System.Nullable<int> Parent_ID
		{
			get
			{
				return this._Parent_ID;
			}
			set
			{
				if ((this._Parent_ID != value))
				{
					if (this._HCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParent_IDChanging(value);
					this.SendPropertyChanging();
					this._Parent_ID = value;
					this.SendPropertyChanged("Parent_ID");
					this.OnParent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HCategory_HCategory", Storage="_HCategories", ThisKey="ID", OtherKey="Parent_ID")]
		public EntitySet<HCategory> HCategories
		{
			get
			{
				return this._HCategories;
			}
			set
			{
				this._HCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HCategory_Product", Storage="_Products", ThisKey="ID", OtherKey="Category_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HCategory_HCategory", Storage="_HCategory1", ThisKey="Parent_ID", OtherKey="ID", IsForeignKey=true)]
		public HCategory HCategory1
		{
			get
			{
				return this._HCategory1.Entity;
			}
			set
			{
				HCategory previousValue = this._HCategory1.Entity;
				if (((previousValue != value) 
							|| (this._HCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HCategory1.Entity = null;
						previousValue.HCategories.Remove(this);
					}
					this._HCategory1.Entity = value;
					if ((value != null))
					{
						value.HCategories.Add(this);
						this._Parent_ID = value.ID;
					}
					else
					{
						this._Parent_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HCategory1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HCategories(HCategory entity)
		{
			this.SendPropertyChanging();
			entity.HCategory1 = this;
		}
		
		private void detach_HCategories(HCategory entity)
		{
			this.SendPropertyChanging();
			entity.HCategory1 = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.HCategory = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.HCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KpiDefinitions")]
	public partial class KpiDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _Active;
		
		private string _TargetObjectTypeFullName;
		
		private string _Criteria;
		
		private string _Expression;
		
		private float _GreenZone;
		
		private float _RedZone;
		
		private bool _Compare;
		
		private string _RangeName;
		
		private string _RangeToCompareName;
		
		private int _MeasurementFrequency;
		
		private int _MeasurementMode;
		
		private int _Direction;
		
		private System.DateTime _ChangedOn;
		
		private string _SuppressedSeries;
		
		private bool _EnableCustomizeRepresentation;
		
		private EntitySet<KpiInstance> _KpiInstances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnTargetObjectTypeFullNameChanging(string value);
    partial void OnTargetObjectTypeFullNameChanged();
    partial void OnCriteriaChanging(string value);
    partial void OnCriteriaChanged();
    partial void OnExpressionChanging(string value);
    partial void OnExpressionChanged();
    partial void OnGreenZoneChanging(float value);
    partial void OnGreenZoneChanged();
    partial void OnRedZoneChanging(float value);
    partial void OnRedZoneChanged();
    partial void OnCompareChanging(bool value);
    partial void OnCompareChanged();
    partial void OnRangeNameChanging(string value);
    partial void OnRangeNameChanged();
    partial void OnRangeToCompareNameChanging(string value);
    partial void OnRangeToCompareNameChanged();
    partial void OnMeasurementFrequencyChanging(int value);
    partial void OnMeasurementFrequencyChanged();
    partial void OnMeasurementModeChanging(int value);
    partial void OnMeasurementModeChanged();
    partial void OnDirectionChanging(int value);
    partial void OnDirectionChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    partial void OnSuppressedSeriesChanging(string value);
    partial void OnSuppressedSeriesChanged();
    partial void OnEnableCustomizeRepresentationChanging(bool value);
    partial void OnEnableCustomizeRepresentationChanged();
    #endregion
		
		public KpiDefinition()
		{
			this._KpiInstances = new EntitySet<KpiInstance>(new Action<KpiInstance>(this.attach_KpiInstances), new Action<KpiInstance>(this.detach_KpiInstances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetObjectTypeFullName", DbType="NVarChar(MAX)")]
		public string TargetObjectTypeFullName
		{
			get
			{
				return this._TargetObjectTypeFullName;
			}
			set
			{
				if ((this._TargetObjectTypeFullName != value))
				{
					this.OnTargetObjectTypeFullNameChanging(value);
					this.SendPropertyChanging();
					this._TargetObjectTypeFullName = value;
					this.SendPropertyChanged("TargetObjectTypeFullName");
					this.OnTargetObjectTypeFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criteria", DbType="NVarChar(MAX)")]
		public string Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this.OnCriteriaChanging(value);
					this.SendPropertyChanging();
					this._Criteria = value;
					this.SendPropertyChanged("Criteria");
					this.OnCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expression", DbType="NVarChar(MAX)")]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this.OnExpressionChanging(value);
					this.SendPropertyChanging();
					this._Expression = value;
					this.SendPropertyChanged("Expression");
					this.OnExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreenZone", DbType="Real NOT NULL")]
		public float GreenZone
		{
			get
			{
				return this._GreenZone;
			}
			set
			{
				if ((this._GreenZone != value))
				{
					this.OnGreenZoneChanging(value);
					this.SendPropertyChanging();
					this._GreenZone = value;
					this.SendPropertyChanged("GreenZone");
					this.OnGreenZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedZone", DbType="Real NOT NULL")]
		public float RedZone
		{
			get
			{
				return this._RedZone;
			}
			set
			{
				if ((this._RedZone != value))
				{
					this.OnRedZoneChanging(value);
					this.SendPropertyChanging();
					this._RedZone = value;
					this.SendPropertyChanged("RedZone");
					this.OnRedZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compare", DbType="Bit NOT NULL")]
		public bool Compare
		{
			get
			{
				return this._Compare;
			}
			set
			{
				if ((this._Compare != value))
				{
					this.OnCompareChanging(value);
					this.SendPropertyChanging();
					this._Compare = value;
					this.SendPropertyChanged("Compare");
					this.OnCompareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeName", DbType="NVarChar(MAX)")]
		public string RangeName
		{
			get
			{
				return this._RangeName;
			}
			set
			{
				if ((this._RangeName != value))
				{
					this.OnRangeNameChanging(value);
					this.SendPropertyChanging();
					this._RangeName = value;
					this.SendPropertyChanged("RangeName");
					this.OnRangeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeToCompareName", DbType="NVarChar(MAX)")]
		public string RangeToCompareName
		{
			get
			{
				return this._RangeToCompareName;
			}
			set
			{
				if ((this._RangeToCompareName != value))
				{
					this.OnRangeToCompareNameChanging(value);
					this.SendPropertyChanging();
					this._RangeToCompareName = value;
					this.SendPropertyChanged("RangeToCompareName");
					this.OnRangeToCompareNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementFrequency", DbType="Int NOT NULL")]
		public int MeasurementFrequency
		{
			get
			{
				return this._MeasurementFrequency;
			}
			set
			{
				if ((this._MeasurementFrequency != value))
				{
					this.OnMeasurementFrequencyChanging(value);
					this.SendPropertyChanging();
					this._MeasurementFrequency = value;
					this.SendPropertyChanged("MeasurementFrequency");
					this.OnMeasurementFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementMode", DbType="Int NOT NULL")]
		public int MeasurementMode
		{
			get
			{
				return this._MeasurementMode;
			}
			set
			{
				if ((this._MeasurementMode != value))
				{
					this.OnMeasurementModeChanging(value);
					this.SendPropertyChanging();
					this._MeasurementMode = value;
					this.SendPropertyChanged("MeasurementMode");
					this.OnMeasurementModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="Int NOT NULL")]
		public int Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppressedSeries", DbType="NVarChar(MAX)")]
		public string SuppressedSeries
		{
			get
			{
				return this._SuppressedSeries;
			}
			set
			{
				if ((this._SuppressedSeries != value))
				{
					this.OnSuppressedSeriesChanging(value);
					this.SendPropertyChanging();
					this._SuppressedSeries = value;
					this.SendPropertyChanged("SuppressedSeries");
					this.OnSuppressedSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableCustomizeRepresentation", DbType="Bit NOT NULL")]
		public bool EnableCustomizeRepresentation
		{
			get
			{
				return this._EnableCustomizeRepresentation;
			}
			set
			{
				if ((this._EnableCustomizeRepresentation != value))
				{
					this.OnEnableCustomizeRepresentationChanging(value);
					this.SendPropertyChanging();
					this._EnableCustomizeRepresentation = value;
					this.SendPropertyChanged("EnableCustomizeRepresentation");
					this.OnEnableCustomizeRepresentationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KpiDefinition_KpiInstance", Storage="_KpiInstances", ThisKey="ID", OtherKey="KpiDefinition_ID")]
		public EntitySet<KpiInstance> KpiInstances
		{
			get
			{
				return this._KpiInstances;
			}
			set
			{
				this._KpiInstances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KpiInstances(KpiInstance entity)
		{
			this.SendPropertyChanging();
			entity.KpiDefinition = this;
		}
		
		private void detach_KpiInstances(KpiInstance entity)
		{
			this.SendPropertyChanging();
			entity.KpiDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KpiHistoryItems")]
	public partial class KpiHistoryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _RangeStart;
		
		private System.DateTime _RangeEnd;
		
		private float _Value;
		
		private int _KpiInstance_ID;
		
		private EntityRef<KpiInstance> _KpiInstance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRangeStartChanging(System.DateTime value);
    partial void OnRangeStartChanged();
    partial void OnRangeEndChanging(System.DateTime value);
    partial void OnRangeEndChanged();
    partial void OnValueChanging(float value);
    partial void OnValueChanged();
    partial void OnKpiInstance_IDChanging(int value);
    partial void OnKpiInstance_IDChanged();
    #endregion
		
		public KpiHistoryItem()
		{
			this._KpiInstance = default(EntityRef<KpiInstance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeStart", DbType="DateTime NOT NULL")]
		public System.DateTime RangeStart
		{
			get
			{
				return this._RangeStart;
			}
			set
			{
				if ((this._RangeStart != value))
				{
					this.OnRangeStartChanging(value);
					this.SendPropertyChanging();
					this._RangeStart = value;
					this.SendPropertyChanged("RangeStart");
					this.OnRangeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeEnd", DbType="DateTime NOT NULL")]
		public System.DateTime RangeEnd
		{
			get
			{
				return this._RangeEnd;
			}
			set
			{
				if ((this._RangeEnd != value))
				{
					this.OnRangeEndChanging(value);
					this.SendPropertyChanging();
					this._RangeEnd = value;
					this.SendPropertyChanged("RangeEnd");
					this.OnRangeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Real NOT NULL")]
		public float Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KpiInstance_ID", DbType="Int NOT NULL")]
		public int KpiInstance_ID
		{
			get
			{
				return this._KpiInstance_ID;
			}
			set
			{
				if ((this._KpiInstance_ID != value))
				{
					if (this._KpiInstance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKpiInstance_IDChanging(value);
					this.SendPropertyChanging();
					this._KpiInstance_ID = value;
					this.SendPropertyChanged("KpiInstance_ID");
					this.OnKpiInstance_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KpiInstance_KpiHistoryItem", Storage="_KpiInstance", ThisKey="KpiInstance_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KpiInstance KpiInstance
		{
			get
			{
				return this._KpiInstance.Entity;
			}
			set
			{
				KpiInstance previousValue = this._KpiInstance.Entity;
				if (((previousValue != value) 
							|| (this._KpiInstance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KpiInstance.Entity = null;
						previousValue.KpiHistoryItems.Remove(this);
					}
					this._KpiInstance.Entity = value;
					if ((value != null))
					{
						value.KpiHistoryItems.Add(this);
						this._KpiInstance_ID = value.ID;
					}
					else
					{
						this._KpiInstance_ID = default(int);
					}
					this.SendPropertyChanged("KpiInstance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KpiInstanceKpiScorecards")]
	public partial class KpiInstanceKpiScorecard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KpiInstance_ID;
		
		private int _KpiScorecard_ID;
		
		private EntityRef<KpiInstance> _KpiInstance;
		
		private EntityRef<KpiScorecard> _KpiScorecard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKpiInstance_IDChanging(int value);
    partial void OnKpiInstance_IDChanged();
    partial void OnKpiScorecard_IDChanging(int value);
    partial void OnKpiScorecard_IDChanged();
    #endregion
		
		public KpiInstanceKpiScorecard()
		{
			this._KpiInstance = default(EntityRef<KpiInstance>);
			this._KpiScorecard = default(EntityRef<KpiScorecard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KpiInstance_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KpiInstance_ID
		{
			get
			{
				return this._KpiInstance_ID;
			}
			set
			{
				if ((this._KpiInstance_ID != value))
				{
					if (this._KpiInstance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKpiInstance_IDChanging(value);
					this.SendPropertyChanging();
					this._KpiInstance_ID = value;
					this.SendPropertyChanged("KpiInstance_ID");
					this.OnKpiInstance_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KpiScorecard_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KpiScorecard_ID
		{
			get
			{
				return this._KpiScorecard_ID;
			}
			set
			{
				if ((this._KpiScorecard_ID != value))
				{
					if (this._KpiScorecard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKpiScorecard_IDChanging(value);
					this.SendPropertyChanging();
					this._KpiScorecard_ID = value;
					this.SendPropertyChanged("KpiScorecard_ID");
					this.OnKpiScorecard_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KpiInstance_KpiInstanceKpiScorecard", Storage="_KpiInstance", ThisKey="KpiInstance_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KpiInstance KpiInstance
		{
			get
			{
				return this._KpiInstance.Entity;
			}
			set
			{
				KpiInstance previousValue = this._KpiInstance.Entity;
				if (((previousValue != value) 
							|| (this._KpiInstance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KpiInstance.Entity = null;
						previousValue.KpiInstanceKpiScorecards.Remove(this);
					}
					this._KpiInstance.Entity = value;
					if ((value != null))
					{
						value.KpiInstanceKpiScorecards.Add(this);
						this._KpiInstance_ID = value.ID;
					}
					else
					{
						this._KpiInstance_ID = default(int);
					}
					this.SendPropertyChanged("KpiInstance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KpiScorecard_KpiInstanceKpiScorecard", Storage="_KpiScorecard", ThisKey="KpiScorecard_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KpiScorecard KpiScorecard
		{
			get
			{
				return this._KpiScorecard.Entity;
			}
			set
			{
				KpiScorecard previousValue = this._KpiScorecard.Entity;
				if (((previousValue != value) 
							|| (this._KpiScorecard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KpiScorecard.Entity = null;
						previousValue.KpiInstanceKpiScorecards.Remove(this);
					}
					this._KpiScorecard.Entity = value;
					if ((value != null))
					{
						value.KpiInstanceKpiScorecards.Add(this);
						this._KpiScorecard_ID = value.ID;
					}
					else
					{
						this._KpiScorecard_ID = default(int);
					}
					this.SendPropertyChanged("KpiScorecard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KpiInstances")]
	public partial class KpiInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _ForceMeasurementDateTime;
		
		private string _Settings;
		
		private int _KpiDefinition_ID;
		
		private EntitySet<KpiHistoryItem> _KpiHistoryItems;
		
		private EntitySet<KpiInstanceKpiScorecard> _KpiInstanceKpiScorecards;
		
		private EntityRef<KpiDefinition> _KpiDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnForceMeasurementDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnForceMeasurementDateTimeChanged();
    partial void OnSettingsChanging(string value);
    partial void OnSettingsChanged();
    partial void OnKpiDefinition_IDChanging(int value);
    partial void OnKpiDefinition_IDChanged();
    #endregion
		
		public KpiInstance()
		{
			this._KpiHistoryItems = new EntitySet<KpiHistoryItem>(new Action<KpiHistoryItem>(this.attach_KpiHistoryItems), new Action<KpiHistoryItem>(this.detach_KpiHistoryItems));
			this._KpiInstanceKpiScorecards = new EntitySet<KpiInstanceKpiScorecard>(new Action<KpiInstanceKpiScorecard>(this.attach_KpiInstanceKpiScorecards), new Action<KpiInstanceKpiScorecard>(this.detach_KpiInstanceKpiScorecards));
			this._KpiDefinition = default(EntityRef<KpiDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForceMeasurementDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ForceMeasurementDateTime
		{
			get
			{
				return this._ForceMeasurementDateTime;
			}
			set
			{
				if ((this._ForceMeasurementDateTime != value))
				{
					this.OnForceMeasurementDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ForceMeasurementDateTime = value;
					this.SendPropertyChanged("ForceMeasurementDateTime");
					this.OnForceMeasurementDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Settings", DbType="NVarChar(MAX)")]
		public string Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				if ((this._Settings != value))
				{
					this.OnSettingsChanging(value);
					this.SendPropertyChanging();
					this._Settings = value;
					this.SendPropertyChanged("Settings");
					this.OnSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KpiDefinition_ID", DbType="Int NOT NULL")]
		public int KpiDefinition_ID
		{
			get
			{
				return this._KpiDefinition_ID;
			}
			set
			{
				if ((this._KpiDefinition_ID != value))
				{
					if (this._KpiDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKpiDefinition_IDChanging(value);
					this.SendPropertyChanging();
					this._KpiDefinition_ID = value;
					this.SendPropertyChanged("KpiDefinition_ID");
					this.OnKpiDefinition_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KpiInstance_KpiHistoryItem", Storage="_KpiHistoryItems", ThisKey="ID", OtherKey="KpiInstance_ID")]
		public EntitySet<KpiHistoryItem> KpiHistoryItems
		{
			get
			{
				return this._KpiHistoryItems;
			}
			set
			{
				this._KpiHistoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KpiInstance_KpiInstanceKpiScorecard", Storage="_KpiInstanceKpiScorecards", ThisKey="ID", OtherKey="KpiInstance_ID")]
		public EntitySet<KpiInstanceKpiScorecard> KpiInstanceKpiScorecards
		{
			get
			{
				return this._KpiInstanceKpiScorecards;
			}
			set
			{
				this._KpiInstanceKpiScorecards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KpiDefinition_KpiInstance", Storage="_KpiDefinition", ThisKey="KpiDefinition_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KpiDefinition KpiDefinition
		{
			get
			{
				return this._KpiDefinition.Entity;
			}
			set
			{
				KpiDefinition previousValue = this._KpiDefinition.Entity;
				if (((previousValue != value) 
							|| (this._KpiDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KpiDefinition.Entity = null;
						previousValue.KpiInstances.Remove(this);
					}
					this._KpiDefinition.Entity = value;
					if ((value != null))
					{
						value.KpiInstances.Add(this);
						this._KpiDefinition_ID = value.ID;
					}
					else
					{
						this._KpiDefinition_ID = default(int);
					}
					this.SendPropertyChanged("KpiDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KpiHistoryItems(KpiHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.KpiInstance = this;
		}
		
		private void detach_KpiHistoryItems(KpiHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.KpiInstance = null;
		}
		
		private void attach_KpiInstanceKpiScorecards(KpiInstanceKpiScorecard entity)
		{
			this.SendPropertyChanging();
			entity.KpiInstance = this;
		}
		
		private void detach_KpiInstanceKpiScorecards(KpiInstanceKpiScorecard entity)
		{
			this.SendPropertyChanging();
			entity.KpiInstance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KpiScorecards")]
	public partial class KpiScorecard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<KpiInstanceKpiScorecard> _KpiInstanceKpiScorecards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public KpiScorecard()
		{
			this._KpiInstanceKpiScorecards = new EntitySet<KpiInstanceKpiScorecard>(new Action<KpiInstanceKpiScorecard>(this.attach_KpiInstanceKpiScorecards), new Action<KpiInstanceKpiScorecard>(this.detach_KpiInstanceKpiScorecards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KpiScorecard_KpiInstanceKpiScorecard", Storage="_KpiInstanceKpiScorecards", ThisKey="ID", OtherKey="KpiScorecard_ID")]
		public EntitySet<KpiInstanceKpiScorecard> KpiInstanceKpiScorecards
		{
			get
			{
				return this._KpiInstanceKpiScorecards;
			}
			set
			{
				this._KpiInstanceKpiScorecards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KpiInstanceKpiScorecards(KpiInstanceKpiScorecard entity)
		{
			this.SendPropertyChanging();
			entity.KpiScorecard = this;
		}
		
		private void detach_KpiInstanceKpiScorecards(KpiInstanceKpiScorecard entity)
		{
			this.SendPropertyChanging();
			entity.KpiScorecard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeadHistoryRecords")]
	public partial class LeadHistoryRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeadHistoryRecordID;
		
		private int _SaleStage;
		
		private System.Nullable<int> _CRMLead_ActivityTargetId;
		
		private EntityRef<ActivityTarget> _ActivityTarget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeadHistoryRecordIDChanging(int value);
    partial void OnLeadHistoryRecordIDChanged();
    partial void OnSaleStageChanging(int value);
    partial void OnSaleStageChanged();
    partial void OnCRMLead_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMLead_ActivityTargetIdChanged();
    #endregion
		
		public LeadHistoryRecord()
		{
			this._ActivityTarget = default(EntityRef<ActivityTarget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadHistoryRecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeadHistoryRecordID
		{
			get
			{
				return this._LeadHistoryRecordID;
			}
			set
			{
				if ((this._LeadHistoryRecordID != value))
				{
					this.OnLeadHistoryRecordIDChanging(value);
					this.SendPropertyChanging();
					this._LeadHistoryRecordID = value;
					this.SendPropertyChanged("LeadHistoryRecordID");
					this.OnLeadHistoryRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleStage", DbType="Int NOT NULL")]
		public int SaleStage
		{
			get
			{
				return this._SaleStage;
			}
			set
			{
				if ((this._SaleStage != value))
				{
					this.OnSaleStageChanging(value);
					this.SendPropertyChanging();
					this._SaleStage = value;
					this.SendPropertyChanged("SaleStage");
					this.OnSaleStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMLead_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMLead_ActivityTargetId
		{
			get
			{
				return this._CRMLead_ActivityTargetId;
			}
			set
			{
				if ((this._CRMLead_ActivityTargetId != value))
				{
					if (this._ActivityTarget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMLead_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMLead_ActivityTargetId = value;
					this.SendPropertyChanged("CRMLead_ActivityTargetId");
					this.OnCRMLead_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_LeadHistoryRecord", Storage="_ActivityTarget", ThisKey="CRMLead_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget
		{
			get
			{
				return this._ActivityTarget.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget.Entity = null;
						previousValue.LeadHistoryRecords.Remove(this);
					}
					this._ActivityTarget.Entity = value;
					if ((value != null))
					{
						value.LeadHistoryRecords.Add(this);
						this._CRMLead_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMLead_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleInfoes")]
	public partial class ModuleInfoe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Version;
		
		private string _AssemblyFileName;
		
		private bool _IsMain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnAssemblyFileNameChanging(string value);
    partial void OnAssemblyFileNameChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    #endregion
		
		public ModuleInfoe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(MAX)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyFileName", DbType="NVarChar(MAX)")]
		public string AssemblyFileName
		{
			get
			{
				return this._AssemblyFileName;
			}
			set
			{
				if ((this._AssemblyFileName != value))
				{
					this.OnAssemblyFileNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyFileName = value;
					this.SendPropertyChanged("AssemblyFileName");
					this.OnAssemblyFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit NOT NULL")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notes")]
	public partial class Note : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _Attachment_ID;
		
		private System.Nullable<int> _CRMActivity_ID;
		
		private System.Nullable<int> _CRMProduct_ID;
		
		private System.Nullable<int> _CRMInvoice_ActivityTargetId;
		
		private System.Nullable<int> _CRMQuote_ActivityTargetId;
		
		private System.Nullable<int> _CRMLead_ActivityTargetId;
		
		private System.Nullable<int> _CRMOrder_ActivityTargetId;
		
		private System.Nullable<int> _CRMOpportunity_ActivityTargetId;
		
		private System.Nullable<int> _CRMContact_ActivityTargetId;
		
		private System.Nullable<int> _CRMAccount_ActivityTargetId;
		
		private EntityRef<ActivityTarget> _ActivityTarget;
		
		private EntityRef<ActivityTarget> _ActivityTarget1;
		
		private EntityRef<ActivityTarget> _ActivityTarget2;
		
		private EntityRef<ActivityTarget> _ActivityTarget3;
		
		private EntityRef<ActivityTarget> _ActivityTarget4;
		
		private EntityRef<ActivityTarget> _ActivityTarget5;
		
		private EntityRef<ActivityTarget> _ActivityTarget6;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<FileData> _FileData;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAttachment_IDChanging(System.Nullable<int> value);
    partial void OnAttachment_IDChanged();
    partial void OnCRMActivity_IDChanging(System.Nullable<int> value);
    partial void OnCRMActivity_IDChanged();
    partial void OnCRMProduct_IDChanging(System.Nullable<int> value);
    partial void OnCRMProduct_IDChanged();
    partial void OnCRMInvoice_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMInvoice_ActivityTargetIdChanged();
    partial void OnCRMQuote_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMQuote_ActivityTargetIdChanged();
    partial void OnCRMLead_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMLead_ActivityTargetIdChanged();
    partial void OnCRMOrder_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMOrder_ActivityTargetIdChanged();
    partial void OnCRMOpportunity_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMOpportunity_ActivityTargetIdChanged();
    partial void OnCRMContact_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMContact_ActivityTargetIdChanged();
    partial void OnCRMAccount_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnCRMAccount_ActivityTargetIdChanged();
    #endregion
		
		public Note()
		{
			this._ActivityTarget = default(EntityRef<ActivityTarget>);
			this._ActivityTarget1 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget2 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget3 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget4 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget5 = default(EntityRef<ActivityTarget>);
			this._ActivityTarget6 = default(EntityRef<ActivityTarget>);
			this._Event = default(EntityRef<Event>);
			this._FileData = default(EntityRef<FileData>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment_ID", DbType="Int")]
		public System.Nullable<int> Attachment_ID
		{
			get
			{
				return this._Attachment_ID;
			}
			set
			{
				if ((this._Attachment_ID != value))
				{
					if (this._FileData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttachment_IDChanging(value);
					this.SendPropertyChanging();
					this._Attachment_ID = value;
					this.SendPropertyChanged("Attachment_ID");
					this.OnAttachment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMActivity_ID", DbType="Int")]
		public System.Nullable<int> CRMActivity_ID
		{
			get
			{
				return this._CRMActivity_ID;
			}
			set
			{
				if ((this._CRMActivity_ID != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMActivity_IDChanging(value);
					this.SendPropertyChanging();
					this._CRMActivity_ID = value;
					this.SendPropertyChanged("CRMActivity_ID");
					this.OnCRMActivity_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMProduct_ID", DbType="Int")]
		public System.Nullable<int> CRMProduct_ID
		{
			get
			{
				return this._CRMProduct_ID;
			}
			set
			{
				if ((this._CRMProduct_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._CRMProduct_ID = value;
					this.SendPropertyChanged("CRMProduct_ID");
					this.OnCRMProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMInvoice_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMInvoice_ActivityTargetId
		{
			get
			{
				return this._CRMInvoice_ActivityTargetId;
			}
			set
			{
				if ((this._CRMInvoice_ActivityTargetId != value))
				{
					if (this._ActivityTarget2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMInvoice_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMInvoice_ActivityTargetId = value;
					this.SendPropertyChanged("CRMInvoice_ActivityTargetId");
					this.OnCRMInvoice_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMQuote_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMQuote_ActivityTargetId
		{
			get
			{
				return this._CRMQuote_ActivityTargetId;
			}
			set
			{
				if ((this._CRMQuote_ActivityTargetId != value))
				{
					if (this._ActivityTarget6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMQuote_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMQuote_ActivityTargetId = value;
					this.SendPropertyChanged("CRMQuote_ActivityTargetId");
					this.OnCRMQuote_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMLead_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMLead_ActivityTargetId
		{
			get
			{
				return this._CRMLead_ActivityTargetId;
			}
			set
			{
				if ((this._CRMLead_ActivityTargetId != value))
				{
					if (this._ActivityTarget3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMLead_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMLead_ActivityTargetId = value;
					this.SendPropertyChanged("CRMLead_ActivityTargetId");
					this.OnCRMLead_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMOrder_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMOrder_ActivityTargetId
		{
			get
			{
				return this._CRMOrder_ActivityTargetId;
			}
			set
			{
				if ((this._CRMOrder_ActivityTargetId != value))
				{
					if (this._ActivityTarget5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMOrder_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMOrder_ActivityTargetId = value;
					this.SendPropertyChanged("CRMOrder_ActivityTargetId");
					this.OnCRMOrder_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMOpportunity_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMOpportunity_ActivityTargetId
		{
			get
			{
				return this._CRMOpportunity_ActivityTargetId;
			}
			set
			{
				if ((this._CRMOpportunity_ActivityTargetId != value))
				{
					if (this._ActivityTarget4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMOpportunity_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMOpportunity_ActivityTargetId = value;
					this.SendPropertyChanged("CRMOpportunity_ActivityTargetId");
					this.OnCRMOpportunity_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMContact_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMContact_ActivityTargetId
		{
			get
			{
				return this._CRMContact_ActivityTargetId;
			}
			set
			{
				if ((this._CRMContact_ActivityTargetId != value))
				{
					if (this._ActivityTarget1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMContact_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMContact_ActivityTargetId = value;
					this.SendPropertyChanged("CRMContact_ActivityTargetId");
					this.OnCRMContact_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMAccount_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> CRMAccount_ActivityTargetId
		{
			get
			{
				return this._CRMAccount_ActivityTargetId;
			}
			set
			{
				if ((this._CRMAccount_ActivityTargetId != value))
				{
					if (this._ActivityTarget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRMAccount_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CRMAccount_ActivityTargetId = value;
					this.SendPropertyChanged("CRMAccount_ActivityTargetId");
					this.OnCRMAccount_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note", Storage="_ActivityTarget", ThisKey="CRMAccount_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget
		{
			get
			{
				return this._ActivityTarget.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget.Entity = null;
						previousValue.Notes.Remove(this);
					}
					this._ActivityTarget.Entity = value;
					if ((value != null))
					{
						value.Notes.Add(this);
						this._CRMAccount_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMAccount_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note1", Storage="_ActivityTarget1", ThisKey="CRMContact_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget1
		{
			get
			{
				return this._ActivityTarget1.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget1.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget1.Entity = null;
						previousValue.Notes1.Remove(this);
					}
					this._ActivityTarget1.Entity = value;
					if ((value != null))
					{
						value.Notes1.Add(this);
						this._CRMContact_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMContact_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note2", Storage="_ActivityTarget2", ThisKey="CRMInvoice_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget2
		{
			get
			{
				return this._ActivityTarget2.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget2.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget2.Entity = null;
						previousValue.Notes2.Remove(this);
					}
					this._ActivityTarget2.Entity = value;
					if ((value != null))
					{
						value.Notes2.Add(this);
						this._CRMInvoice_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMInvoice_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note3", Storage="_ActivityTarget3", ThisKey="CRMLead_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget3
		{
			get
			{
				return this._ActivityTarget3.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget3.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget3.Entity = null;
						previousValue.Notes3.Remove(this);
					}
					this._ActivityTarget3.Entity = value;
					if ((value != null))
					{
						value.Notes3.Add(this);
						this._CRMLead_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMLead_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note4", Storage="_ActivityTarget4", ThisKey="CRMOpportunity_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget4
		{
			get
			{
				return this._ActivityTarget4.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget4.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget4.Entity = null;
						previousValue.Notes4.Remove(this);
					}
					this._ActivityTarget4.Entity = value;
					if ((value != null))
					{
						value.Notes4.Add(this);
						this._CRMOpportunity_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMOpportunity_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note5", Storage="_ActivityTarget5", ThisKey="CRMOrder_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget5
		{
			get
			{
				return this._ActivityTarget5.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget5.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget5.Entity = null;
						previousValue.Notes5.Remove(this);
					}
					this._ActivityTarget5.Entity = value;
					if ((value != null))
					{
						value.Notes5.Add(this);
						this._CRMOrder_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMOrder_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_Note6", Storage="_ActivityTarget6", ThisKey="CRMQuote_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget6
		{
			get
			{
				return this._ActivityTarget6.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget6.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget6.Entity = null;
						previousValue.Notes6.Remove(this);
					}
					this._ActivityTarget6.Entity = value;
					if ((value != null))
					{
						value.Notes6.Add(this);
						this._CRMQuote_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._CRMQuote_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_Note", Storage="_Event", ThisKey="CRMActivity_ID", OtherKey="ID", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.Notes.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.Notes.Add(this);
						this._CRMActivity_ID = value.ID;
					}
					else
					{
						this._CRMActivity_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileData_Note", Storage="_FileData", ThisKey="Attachment_ID", OtherKey="ID", IsForeignKey=true)]
		public FileData FileData
		{
			get
			{
				return this._FileData.Entity;
			}
			set
			{
				FileData previousValue = this._FileData.Entity;
				if (((previousValue != value) 
							|| (this._FileData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileData.Entity = null;
						previousValue.Notes.Remove(this);
					}
					this._FileData.Entity = value;
					if ((value != null))
					{
						value.Notes.Add(this);
						this._Attachment_ID = value.ID;
					}
					else
					{
						this._Attachment_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("FileData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Note", Storage="_Product", ThisKey="CRMProduct_ID", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Notes.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Notes.Add(this);
						this._CRMProduct_ID = value.ID;
					}
					else
					{
						this._CRMProduct_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.People")]
	public partial class People : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _JobTitle;
		
		private int _Gender;
		
		private int _MartialStatus;
		
		private string _SpouseName;
		
		private System.Nullable<System.DateTime> _Anniversary;
		
		private EntitySet<ActivityTarget> _ActivityTargets;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnGenderChanging(int value);
    partial void OnGenderChanged();
    partial void OnMartialStatusChanging(int value);
    partial void OnMartialStatusChanged();
    partial void OnSpouseNameChanging(string value);
    partial void OnSpouseNameChanged();
    partial void OnAnniversaryChanging(System.Nullable<System.DateTime> value);
    partial void OnAnniversaryChanged();
    #endregion
		
		public People()
		{
			this._ActivityTargets = new EntitySet<ActivityTarget>(new Action<ActivityTarget>(this.attach_ActivityTargets), new Action<ActivityTarget>(this.detach_ActivityTargets));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(MAX)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int NOT NULL")]
		public int Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MartialStatus", DbType="Int NOT NULL")]
		public int MartialStatus
		{
			get
			{
				return this._MartialStatus;
			}
			set
			{
				if ((this._MartialStatus != value))
				{
					this.OnMartialStatusChanging(value);
					this.SendPropertyChanging();
					this._MartialStatus = value;
					this.SendPropertyChanged("MartialStatus");
					this.OnMartialStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseName", DbType="NVarChar(MAX)")]
		public string SpouseName
		{
			get
			{
				return this._SpouseName;
			}
			set
			{
				if ((this._SpouseName != value))
				{
					this.OnSpouseNameChanging(value);
					this.SendPropertyChanging();
					this._SpouseName = value;
					this.SendPropertyChanged("SpouseName");
					this.OnSpouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anniversary", DbType="DateTime")]
		public System.Nullable<System.DateTime> Anniversary
		{
			get
			{
				return this._Anniversary;
			}
			set
			{
				if ((this._Anniversary != value))
				{
					this.OnAnniversaryChanging(value);
					this.SendPropertyChanging();
					this._Anniversary = value;
					this.SendPropertyChanged("Anniversary");
					this.OnAnniversaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_ActivityTarget", Storage="_ActivityTargets", ThisKey="ID", OtherKey="Person_ID")]
		public EntitySet<ActivityTarget> ActivityTargets
		{
			get
			{
				return this._ActivityTargets;
			}
			set
			{
				this._ActivityTargets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_User", Storage="_Users", ThisKey="ID", OtherKey="Person_ID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityTargets(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_ActivityTargets(ActivityTarget entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private decimal _Price;
		
		private int _Status;
		
		private string _Discriminator;
		
		private System.Nullable<int> _Category_ID;
		
		private EntitySet<Note> _Notes;
		
		private EntitySet<SaleItem> _SaleItems;
		
		private EntityRef<HCategory> _HCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    partial void OnCategory_IDChanging(System.Nullable<int> value);
    partial void OnCategory_IDChanged();
    #endregion
		
		public Product()
		{
			this._Notes = new EntitySet<Note>(new Action<Note>(this.attach_Notes), new Action<Note>(this.detach_Notes));
			this._SaleItems = new EntitySet<SaleItem>(new Action<SaleItem>(this.attach_SaleItems), new Action<SaleItem>(this.detach_SaleItems));
			this._HCategory = default(EntityRef<HCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", DbType="Int")]
		public System.Nullable<int> Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					if (this._HCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Note", Storage="_Notes", ThisKey="ID", OtherKey="CRMProduct_ID")]
		public EntitySet<Note> Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				this._Notes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SaleItem", Storage="_SaleItems", ThisKey="ID", OtherKey="Product_ID")]
		public EntitySet<SaleItem> SaleItems
		{
			get
			{
				return this._SaleItems;
			}
			set
			{
				this._SaleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HCategory_Product", Storage="_HCategory", ThisKey="Category_ID", OtherKey="ID", IsForeignKey=true)]
		public HCategory HCategory
		{
			get
			{
				return this._HCategory.Entity;
			}
			set
			{
				HCategory previousValue = this._HCategory.Entity;
				if (((previousValue != value) 
							|| (this._HCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HCategory.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._HCategory.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Category_ID = value.ID;
					}
					else
					{
						this._Category_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Notes(Note entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_SaleItems(SaleItem entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_SaleItems(SaleItem entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportDatas")]
	public partial class ReportData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Data.Linq.Binary _Content;
		
		private string _DataTypeName;
		
		private bool _IsInplaceReport;
		
		private string _ReportName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    partial void OnDataTypeNameChanging(string value);
    partial void OnDataTypeNameChanged();
    partial void OnIsInplaceReportChanging(bool value);
    partial void OnIsInplaceReportChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    #endregion
		
		public ReportData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTypeName", DbType="NVarChar(MAX)")]
		public string DataTypeName
		{
			get
			{
				return this._DataTypeName;
			}
			set
			{
				if ((this._DataTypeName != value))
				{
					this.OnDataTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DataTypeName = value;
					this.SendPropertyChanged("DataTypeName");
					this.OnDataTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInplaceReport", DbType="Bit NOT NULL")]
		public bool IsInplaceReport
		{
			get
			{
				return this._IsInplaceReport;
			}
			set
			{
				if ((this._IsInplaceReport != value))
				{
					this.OnIsInplaceReportChanging(value);
					this.SendPropertyChanging();
					this._IsInplaceReport = value;
					this.SendPropertyChanged("IsInplaceReport");
					this.OnIsInplaceReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="NVarChar(MAX)")]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceEvents")]
	public partial class ResourceEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Resource_Key;
		
		private int _Event_ID;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResource_KeyChanging(int value);
    partial void OnResource_KeyChanged();
    partial void OnEvent_IDChanging(int value);
    partial void OnEvent_IDChanged();
    #endregion
		
		public ResourceEvent()
		{
			this._Event = default(EntityRef<Event>);
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource_Key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Resource_Key
		{
			get
			{
				return this._Resource_Key;
			}
			set
			{
				if ((this._Resource_Key != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResource_KeyChanging(value);
					this.SendPropertyChanging();
					this._Resource_Key = value;
					this.SendPropertyChanged("Resource_Key");
					this.OnResource_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Event_ID
		{
			get
			{
				return this._Event_ID;
			}
			set
			{
				if ((this._Event_ID != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvent_IDChanging(value);
					this.SendPropertyChanging();
					this._Event_ID = value;
					this.SendPropertyChanged("Event_ID");
					this.OnEvent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_ResourceEvent", Storage="_Event", ThisKey="Event_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.ResourceEvents.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.ResourceEvents.Add(this);
						this._Event_ID = value.ID;
					}
					else
					{
						this._Event_ID = default(int);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceEvent", Storage="_Resource", ThisKey="Resource_Key", OtherKey="Key", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceEvents.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceEvents.Add(this);
						this._Resource_Key = value.Key;
					}
					else
					{
						this._Resource_Key = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resources")]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Key;
		
		private string _Caption;
		
		private int _Color_Int;
		
		private EntitySet<ResourceEvent> _ResourceEvents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(int value);
    partial void OnKeyChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnColor_IntChanging(int value);
    partial void OnColor_IntChanged();
    #endregion
		
		public Resource()
		{
			this._ResourceEvents = new EntitySet<ResourceEvent>(new Action<ResourceEvent>(this.attach_ResourceEvents), new Action<ResourceEvent>(this.detach_ResourceEvents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(MAX)")]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color_Int", DbType="Int NOT NULL")]
		public int Color_Int
		{
			get
			{
				return this._Color_Int;
			}
			set
			{
				if ((this._Color_Int != value))
				{
					this.OnColor_IntChanging(value);
					this.SendPropertyChanging();
					this._Color_Int = value;
					this.SendPropertyChanged("Color_Int");
					this.OnColor_IntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceEvent", Storage="_ResourceEvents", ThisKey="Key", OtherKey="Resource_Key")]
		public EntitySet<ResourceEvent> ResourceEvents
		{
			get
			{
				return this._ResourceEvents;
			}
			set
			{
				this._ResourceEvents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceEvents(ResourceEvent entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceEvents(ResourceEvent entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleRoles")]
	public partial class RoleRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Role_ID;
		
		private int _Role_ID1;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Role> _Role1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_IDChanging(int value);
    partial void OnRole_IDChanged();
    partial void OnRole_ID1Changing(int value);
    partial void OnRole_ID1Changed();
    #endregion
		
		public RoleRole()
		{
			this._Role = default(EntityRef<Role>);
			this._Role1 = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Role_ID1
		{
			get
			{
				return this._Role_ID1;
			}
			set
			{
				if ((this._Role_ID1 != value))
				{
					if (this._Role1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_ID1Changing(value);
					this.SendPropertyChanging();
					this._Role_ID1 = value;
					this.SendPropertyChanged("Role_ID1");
					this.OnRole_ID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleRole", Storage="_Role", ThisKey="Role_ID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleRoles.Add(this);
						this._Role_ID = value.ID;
					}
					else
					{
						this._Role_ID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleRole1", Storage="_Role1", ThisKey="Role_ID1", OtherKey="ID", IsForeignKey=true)]
		public Role Role1
		{
			get
			{
				return this._Role1.Entity;
			}
			set
			{
				Role previousValue = this._Role1.Entity;
				if (((previousValue != value) 
							|| (this._Role1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role1.Entity = null;
						previousValue.RoleRoles1.Remove(this);
					}
					this._Role1.Entity = value;
					if ((value != null))
					{
						value.RoleRoles1.Add(this);
						this._Role_ID1 = value.ID;
					}
					else
					{
						this._Role_ID1 = default(int);
					}
					this.SendPropertyChanged("Role1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsAdministrative;
		
		private bool _CanEditModel;
		
		private string _Discriminator;
		
		private EntitySet<RoleRole> _RoleRoles;
		
		private EntitySet<RoleRole> _RoleRoles1;
		
		private EntitySet<TypePermissionObject> _TypePermissionObjects;
		
		private EntitySet<UserRole> _UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsAdministrativeChanging(bool value);
    partial void OnIsAdministrativeChanged();
    partial void OnCanEditModelChanging(bool value);
    partial void OnCanEditModelChanged();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    #endregion
		
		public Role()
		{
			this._RoleRoles = new EntitySet<RoleRole>(new Action<RoleRole>(this.attach_RoleRoles), new Action<RoleRole>(this.detach_RoleRoles));
			this._RoleRoles1 = new EntitySet<RoleRole>(new Action<RoleRole>(this.attach_RoleRoles1), new Action<RoleRole>(this.detach_RoleRoles1));
			this._TypePermissionObjects = new EntitySet<TypePermissionObject>(new Action<TypePermissionObject>(this.attach_TypePermissionObjects), new Action<TypePermissionObject>(this.detach_TypePermissionObjects));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdministrative", DbType="Bit NOT NULL")]
		public bool IsAdministrative
		{
			get
			{
				return this._IsAdministrative;
			}
			set
			{
				if ((this._IsAdministrative != value))
				{
					this.OnIsAdministrativeChanging(value);
					this.SendPropertyChanging();
					this._IsAdministrative = value;
					this.SendPropertyChanged("IsAdministrative");
					this.OnIsAdministrativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEditModel", DbType="Bit NOT NULL")]
		public bool CanEditModel
		{
			get
			{
				return this._CanEditModel;
			}
			set
			{
				if ((this._CanEditModel != value))
				{
					this.OnCanEditModelChanging(value);
					this.SendPropertyChanging();
					this._CanEditModel = value;
					this.SendPropertyChanged("CanEditModel");
					this.OnCanEditModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleRole", Storage="_RoleRoles", ThisKey="ID", OtherKey="Role_ID")]
		public EntitySet<RoleRole> RoleRoles
		{
			get
			{
				return this._RoleRoles;
			}
			set
			{
				this._RoleRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleRole1", Storage="_RoleRoles1", ThisKey="ID", OtherKey="Role_ID1")]
		public EntitySet<RoleRole> RoleRoles1
		{
			get
			{
				return this._RoleRoles1;
			}
			set
			{
				this._RoleRoles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_TypePermissionObject", Storage="_TypePermissionObjects", ThisKey="ID", OtherKey="Role_ID")]
		public EntitySet<TypePermissionObject> TypePermissionObjects
		{
			get
			{
				return this._TypePermissionObjects;
			}
			set
			{
				this._TypePermissionObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="ID", OtherKey="Role_ID")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleRoles(RoleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleRoles(RoleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_RoleRoles1(RoleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role1 = this;
		}
		
		private void detach_RoleRoles1(RoleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role1 = null;
		}
		
		private void attach_TypePermissionObjects(TypePermissionObject entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_TypePermissionObjects(TypePermissionObject entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SaleItems")]
	public partial class SaleItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Quantity;
		
		private decimal _Discount;
		
		private decimal _Amount;
		
		private System.Nullable<int> _Product_ID;
		
		private System.Nullable<int> _SaleBase_ActivityTargetId;
		
		private EntityRef<ActivityTarget> _ActivityTarget;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnProduct_IDChanging(System.Nullable<int> value);
    partial void OnProduct_IDChanged();
    partial void OnSaleBase_ActivityTargetIdChanging(System.Nullable<int> value);
    partial void OnSaleBase_ActivityTargetIdChanged();
    #endregion
		
		public SaleItem()
		{
			this._ActivityTarget = default(EntityRef<ActivityTarget>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", DbType="Int")]
		public System.Nullable<int> Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleBase_ActivityTargetId", DbType="Int")]
		public System.Nullable<int> SaleBase_ActivityTargetId
		{
			get
			{
				return this._SaleBase_ActivityTargetId;
			}
			set
			{
				if ((this._SaleBase_ActivityTargetId != value))
				{
					if (this._ActivityTarget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaleBase_ActivityTargetIdChanging(value);
					this.SendPropertyChanging();
					this._SaleBase_ActivityTargetId = value;
					this.SendPropertyChanged("SaleBase_ActivityTargetId");
					this.OnSaleBase_ActivityTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityTarget_SaleItem", Storage="_ActivityTarget", ThisKey="SaleBase_ActivityTargetId", OtherKey="ActivityTargetId", IsForeignKey=true)]
		public ActivityTarget ActivityTarget
		{
			get
			{
				return this._ActivityTarget.Entity;
			}
			set
			{
				ActivityTarget previousValue = this._ActivityTarget.Entity;
				if (((previousValue != value) 
							|| (this._ActivityTarget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityTarget.Entity = null;
						previousValue.SaleItems.Remove(this);
					}
					this._ActivityTarget.Entity = value;
					if ((value != null))
					{
						value.SaleItems.Add(this);
						this._SaleBase_ActivityTargetId = value.ActivityTargetId;
					}
					else
					{
						this._SaleBase_ActivityTargetId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ActivityTarget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SaleItem", Storage="_Product", ThisKey="Product_ID", OtherKey="ID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.SaleItems.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.SaleItems.Add(this);
						this._Product_ID = value.ID;
					}
					else
					{
						this._Product_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecuritySystemMemberPermissionsObjects")]
	public partial class SecuritySystemMemberPermissionsObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Members;
		
		private string _Criteria;
		
		private bool _AllowRead;
		
		private bool _AllowWrite;
		
		private System.Nullable<bool> _EffectiveRead;
		
		private System.Nullable<bool> _EffectiveWrite;
		
		private System.Nullable<int> _Owner_ID;
		
		private EntityRef<TypePermissionObject> _TypePermissionObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMembersChanging(string value);
    partial void OnMembersChanged();
    partial void OnCriteriaChanging(string value);
    partial void OnCriteriaChanged();
    partial void OnAllowReadChanging(bool value);
    partial void OnAllowReadChanged();
    partial void OnAllowWriteChanging(bool value);
    partial void OnAllowWriteChanged();
    partial void OnEffectiveReadChanging(System.Nullable<bool> value);
    partial void OnEffectiveReadChanged();
    partial void OnEffectiveWriteChanging(System.Nullable<bool> value);
    partial void OnEffectiveWriteChanged();
    partial void OnOwner_IDChanging(System.Nullable<int> value);
    partial void OnOwner_IDChanged();
    #endregion
		
		public SecuritySystemMemberPermissionsObject()
		{
			this._TypePermissionObject = default(EntityRef<TypePermissionObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Members", DbType="NVarChar(MAX)")]
		public string Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				if ((this._Members != value))
				{
					this.OnMembersChanging(value);
					this.SendPropertyChanging();
					this._Members = value;
					this.SendPropertyChanged("Members");
					this.OnMembersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criteria", DbType="NVarChar(MAX)")]
		public string Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this.OnCriteriaChanging(value);
					this.SendPropertyChanging();
					this._Criteria = value;
					this.SendPropertyChanged("Criteria");
					this.OnCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowRead", DbType="Bit NOT NULL")]
		public bool AllowRead
		{
			get
			{
				return this._AllowRead;
			}
			set
			{
				if ((this._AllowRead != value))
				{
					this.OnAllowReadChanging(value);
					this.SendPropertyChanging();
					this._AllowRead = value;
					this.SendPropertyChanged("AllowRead");
					this.OnAllowReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowWrite", DbType="Bit NOT NULL")]
		public bool AllowWrite
		{
			get
			{
				return this._AllowWrite;
			}
			set
			{
				if ((this._AllowWrite != value))
				{
					this.OnAllowWriteChanging(value);
					this.SendPropertyChanging();
					this._AllowWrite = value;
					this.SendPropertyChanged("AllowWrite");
					this.OnAllowWriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveRead", DbType="Bit")]
		public System.Nullable<bool> EffectiveRead
		{
			get
			{
				return this._EffectiveRead;
			}
			set
			{
				if ((this._EffectiveRead != value))
				{
					this.OnEffectiveReadChanging(value);
					this.SendPropertyChanging();
					this._EffectiveRead = value;
					this.SendPropertyChanged("EffectiveRead");
					this.OnEffectiveReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveWrite", DbType="Bit")]
		public System.Nullable<bool> EffectiveWrite
		{
			get
			{
				return this._EffectiveWrite;
			}
			set
			{
				if ((this._EffectiveWrite != value))
				{
					this.OnEffectiveWriteChanging(value);
					this.SendPropertyChanging();
					this._EffectiveWrite = value;
					this.SendPropertyChanged("EffectiveWrite");
					this.OnEffectiveWriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner_ID", DbType="Int")]
		public System.Nullable<int> Owner_ID
		{
			get
			{
				return this._Owner_ID;
			}
			set
			{
				if ((this._Owner_ID != value))
				{
					if (this._TypePermissionObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwner_IDChanging(value);
					this.SendPropertyChanging();
					this._Owner_ID = value;
					this.SendPropertyChanged("Owner_ID");
					this.OnOwner_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypePermissionObject_SecuritySystemMemberPermissionsObject", Storage="_TypePermissionObject", ThisKey="Owner_ID", OtherKey="ID", IsForeignKey=true)]
		public TypePermissionObject TypePermissionObject
		{
			get
			{
				return this._TypePermissionObject.Entity;
			}
			set
			{
				TypePermissionObject previousValue = this._TypePermissionObject.Entity;
				if (((previousValue != value) 
							|| (this._TypePermissionObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypePermissionObject.Entity = null;
						previousValue.SecuritySystemMemberPermissionsObjects.Remove(this);
					}
					this._TypePermissionObject.Entity = value;
					if ((value != null))
					{
						value.SecuritySystemMemberPermissionsObjects.Add(this);
						this._Owner_ID = value.ID;
					}
					else
					{
						this._Owner_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypePermissionObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecuritySystemObjectPermissionsObjects")]
	public partial class SecuritySystemObjectPermissionsObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Criteria;
		
		private bool _AllowRead;
		
		private bool _AllowWrite;
		
		private bool _AllowDelete;
		
		private bool _AllowNavigate;
		
		private System.Nullable<bool> _EffectiveRead;
		
		private System.Nullable<bool> _EffectiveWrite;
		
		private System.Nullable<bool> _EffectiveDelete;
		
		private System.Nullable<bool> _EffectiveNavigate;
		
		private System.Nullable<int> _Owner_ID;
		
		private EntityRef<TypePermissionObject> _TypePermissionObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCriteriaChanging(string value);
    partial void OnCriteriaChanged();
    partial void OnAllowReadChanging(bool value);
    partial void OnAllowReadChanged();
    partial void OnAllowWriteChanging(bool value);
    partial void OnAllowWriteChanged();
    partial void OnAllowDeleteChanging(bool value);
    partial void OnAllowDeleteChanged();
    partial void OnAllowNavigateChanging(bool value);
    partial void OnAllowNavigateChanged();
    partial void OnEffectiveReadChanging(System.Nullable<bool> value);
    partial void OnEffectiveReadChanged();
    partial void OnEffectiveWriteChanging(System.Nullable<bool> value);
    partial void OnEffectiveWriteChanged();
    partial void OnEffectiveDeleteChanging(System.Nullable<bool> value);
    partial void OnEffectiveDeleteChanged();
    partial void OnEffectiveNavigateChanging(System.Nullable<bool> value);
    partial void OnEffectiveNavigateChanged();
    partial void OnOwner_IDChanging(System.Nullable<int> value);
    partial void OnOwner_IDChanged();
    #endregion
		
		public SecuritySystemObjectPermissionsObject()
		{
			this._TypePermissionObject = default(EntityRef<TypePermissionObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criteria", DbType="NVarChar(MAX)")]
		public string Criteria
		{
			get
			{
				return this._Criteria;
			}
			set
			{
				if ((this._Criteria != value))
				{
					this.OnCriteriaChanging(value);
					this.SendPropertyChanging();
					this._Criteria = value;
					this.SendPropertyChanged("Criteria");
					this.OnCriteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowRead", DbType="Bit NOT NULL")]
		public bool AllowRead
		{
			get
			{
				return this._AllowRead;
			}
			set
			{
				if ((this._AllowRead != value))
				{
					this.OnAllowReadChanging(value);
					this.SendPropertyChanging();
					this._AllowRead = value;
					this.SendPropertyChanged("AllowRead");
					this.OnAllowReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowWrite", DbType="Bit NOT NULL")]
		public bool AllowWrite
		{
			get
			{
				return this._AllowWrite;
			}
			set
			{
				if ((this._AllowWrite != value))
				{
					this.OnAllowWriteChanging(value);
					this.SendPropertyChanging();
					this._AllowWrite = value;
					this.SendPropertyChanged("AllowWrite");
					this.OnAllowWriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowDelete", DbType="Bit NOT NULL")]
		public bool AllowDelete
		{
			get
			{
				return this._AllowDelete;
			}
			set
			{
				if ((this._AllowDelete != value))
				{
					this.OnAllowDeleteChanging(value);
					this.SendPropertyChanging();
					this._AllowDelete = value;
					this.SendPropertyChanged("AllowDelete");
					this.OnAllowDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowNavigate", DbType="Bit NOT NULL")]
		public bool AllowNavigate
		{
			get
			{
				return this._AllowNavigate;
			}
			set
			{
				if ((this._AllowNavigate != value))
				{
					this.OnAllowNavigateChanging(value);
					this.SendPropertyChanging();
					this._AllowNavigate = value;
					this.SendPropertyChanged("AllowNavigate");
					this.OnAllowNavigateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveRead", DbType="Bit")]
		public System.Nullable<bool> EffectiveRead
		{
			get
			{
				return this._EffectiveRead;
			}
			set
			{
				if ((this._EffectiveRead != value))
				{
					this.OnEffectiveReadChanging(value);
					this.SendPropertyChanging();
					this._EffectiveRead = value;
					this.SendPropertyChanged("EffectiveRead");
					this.OnEffectiveReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveWrite", DbType="Bit")]
		public System.Nullable<bool> EffectiveWrite
		{
			get
			{
				return this._EffectiveWrite;
			}
			set
			{
				if ((this._EffectiveWrite != value))
				{
					this.OnEffectiveWriteChanging(value);
					this.SendPropertyChanging();
					this._EffectiveWrite = value;
					this.SendPropertyChanged("EffectiveWrite");
					this.OnEffectiveWriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDelete", DbType="Bit")]
		public System.Nullable<bool> EffectiveDelete
		{
			get
			{
				return this._EffectiveDelete;
			}
			set
			{
				if ((this._EffectiveDelete != value))
				{
					this.OnEffectiveDeleteChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDelete = value;
					this.SendPropertyChanged("EffectiveDelete");
					this.OnEffectiveDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveNavigate", DbType="Bit")]
		public System.Nullable<bool> EffectiveNavigate
		{
			get
			{
				return this._EffectiveNavigate;
			}
			set
			{
				if ((this._EffectiveNavigate != value))
				{
					this.OnEffectiveNavigateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveNavigate = value;
					this.SendPropertyChanged("EffectiveNavigate");
					this.OnEffectiveNavigateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner_ID", DbType="Int")]
		public System.Nullable<int> Owner_ID
		{
			get
			{
				return this._Owner_ID;
			}
			set
			{
				if ((this._Owner_ID != value))
				{
					if (this._TypePermissionObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwner_IDChanging(value);
					this.SendPropertyChanging();
					this._Owner_ID = value;
					this.SendPropertyChanged("Owner_ID");
					this.OnOwner_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypePermissionObject_SecuritySystemObjectPermissionsObject", Storage="_TypePermissionObject", ThisKey="Owner_ID", OtherKey="ID", IsForeignKey=true)]
		public TypePermissionObject TypePermissionObject
		{
			get
			{
				return this._TypePermissionObject.Entity;
			}
			set
			{
				TypePermissionObject previousValue = this._TypePermissionObject.Entity;
				if (((previousValue != value) 
							|| (this._TypePermissionObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypePermissionObject.Entity = null;
						previousValue.SecuritySystemObjectPermissionsObjects.Remove(this);
					}
					this._TypePermissionObject.Entity = value;
					if ((value != null))
					{
						value.SecuritySystemObjectPermissionsObjects.Add(this);
						this._Owner_ID = value.ID;
					}
					else
					{
						this._Owner_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypePermissionObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypePermissionObjects")]
	public partial class TypePermissionObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private bool _AllowRead;
		
		private bool _AllowWrite;
		
		private bool _AllowCreate;
		
		private bool _AllowDelete;
		
		private bool _AllowNavigate;
		
		private string _TargetTypeFullName;
		
		private System.Nullable<int> _Role_ID;
		
		private EntitySet<SecuritySystemMemberPermissionsObject> _SecuritySystemMemberPermissionsObjects;
		
		private EntitySet<SecuritySystemObjectPermissionsObject> _SecuritySystemObjectPermissionsObjects;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAllowReadChanging(bool value);
    partial void OnAllowReadChanged();
    partial void OnAllowWriteChanging(bool value);
    partial void OnAllowWriteChanged();
    partial void OnAllowCreateChanging(bool value);
    partial void OnAllowCreateChanged();
    partial void OnAllowDeleteChanging(bool value);
    partial void OnAllowDeleteChanged();
    partial void OnAllowNavigateChanging(bool value);
    partial void OnAllowNavigateChanged();
    partial void OnTargetTypeFullNameChanging(string value);
    partial void OnTargetTypeFullNameChanged();
    partial void OnRole_IDChanging(System.Nullable<int> value);
    partial void OnRole_IDChanged();
    #endregion
		
		public TypePermissionObject()
		{
			this._SecuritySystemMemberPermissionsObjects = new EntitySet<SecuritySystemMemberPermissionsObject>(new Action<SecuritySystemMemberPermissionsObject>(this.attach_SecuritySystemMemberPermissionsObjects), new Action<SecuritySystemMemberPermissionsObject>(this.detach_SecuritySystemMemberPermissionsObjects));
			this._SecuritySystemObjectPermissionsObjects = new EntitySet<SecuritySystemObjectPermissionsObject>(new Action<SecuritySystemObjectPermissionsObject>(this.attach_SecuritySystemObjectPermissionsObjects), new Action<SecuritySystemObjectPermissionsObject>(this.detach_SecuritySystemObjectPermissionsObjects));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowRead", DbType="Bit NOT NULL")]
		public bool AllowRead
		{
			get
			{
				return this._AllowRead;
			}
			set
			{
				if ((this._AllowRead != value))
				{
					this.OnAllowReadChanging(value);
					this.SendPropertyChanging();
					this._AllowRead = value;
					this.SendPropertyChanged("AllowRead");
					this.OnAllowReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowWrite", DbType="Bit NOT NULL")]
		public bool AllowWrite
		{
			get
			{
				return this._AllowWrite;
			}
			set
			{
				if ((this._AllowWrite != value))
				{
					this.OnAllowWriteChanging(value);
					this.SendPropertyChanging();
					this._AllowWrite = value;
					this.SendPropertyChanged("AllowWrite");
					this.OnAllowWriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowCreate", DbType="Bit NOT NULL")]
		public bool AllowCreate
		{
			get
			{
				return this._AllowCreate;
			}
			set
			{
				if ((this._AllowCreate != value))
				{
					this.OnAllowCreateChanging(value);
					this.SendPropertyChanging();
					this._AllowCreate = value;
					this.SendPropertyChanged("AllowCreate");
					this.OnAllowCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowDelete", DbType="Bit NOT NULL")]
		public bool AllowDelete
		{
			get
			{
				return this._AllowDelete;
			}
			set
			{
				if ((this._AllowDelete != value))
				{
					this.OnAllowDeleteChanging(value);
					this.SendPropertyChanging();
					this._AllowDelete = value;
					this.SendPropertyChanged("AllowDelete");
					this.OnAllowDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowNavigate", DbType="Bit NOT NULL")]
		public bool AllowNavigate
		{
			get
			{
				return this._AllowNavigate;
			}
			set
			{
				if ((this._AllowNavigate != value))
				{
					this.OnAllowNavigateChanging(value);
					this.SendPropertyChanging();
					this._AllowNavigate = value;
					this.SendPropertyChanged("AllowNavigate");
					this.OnAllowNavigateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetTypeFullName", DbType="NVarChar(MAX)")]
		public string TargetTypeFullName
		{
			get
			{
				return this._TargetTypeFullName;
			}
			set
			{
				if ((this._TargetTypeFullName != value))
				{
					this.OnTargetTypeFullNameChanging(value);
					this.SendPropertyChanging();
					this._TargetTypeFullName = value;
					this.SendPropertyChanged("TargetTypeFullName");
					this.OnTargetTypeFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="Int")]
		public System.Nullable<int> Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypePermissionObject_SecuritySystemMemberPermissionsObject", Storage="_SecuritySystemMemberPermissionsObjects", ThisKey="ID", OtherKey="Owner_ID")]
		public EntitySet<SecuritySystemMemberPermissionsObject> SecuritySystemMemberPermissionsObjects
		{
			get
			{
				return this._SecuritySystemMemberPermissionsObjects;
			}
			set
			{
				this._SecuritySystemMemberPermissionsObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypePermissionObject_SecuritySystemObjectPermissionsObject", Storage="_SecuritySystemObjectPermissionsObjects", ThisKey="ID", OtherKey="Owner_ID")]
		public EntitySet<SecuritySystemObjectPermissionsObject> SecuritySystemObjectPermissionsObjects
		{
			get
			{
				return this._SecuritySystemObjectPermissionsObjects;
			}
			set
			{
				this._SecuritySystemObjectPermissionsObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_TypePermissionObject", Storage="_Role", ThisKey="Role_ID", OtherKey="ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.TypePermissionObjects.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.TypePermissionObjects.Add(this);
						this._Role_ID = value.ID;
					}
					else
					{
						this._Role_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecuritySystemMemberPermissionsObjects(SecuritySystemMemberPermissionsObject entity)
		{
			this.SendPropertyChanging();
			entity.TypePermissionObject = this;
		}
		
		private void detach_SecuritySystemMemberPermissionsObjects(SecuritySystemMemberPermissionsObject entity)
		{
			this.SendPropertyChanging();
			entity.TypePermissionObject = null;
		}
		
		private void attach_SecuritySystemObjectPermissionsObjects(SecuritySystemObjectPermissionsObject entity)
		{
			this.SendPropertyChanging();
			entity.TypePermissionObject = this;
		}
		
		private void detach_SecuritySystemObjectPermissionsObjects(SecuritySystemObjectPermissionsObject entity)
		{
			this.SendPropertyChanging();
			entity.TypePermissionObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoles")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private int _Role_ID;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnRole_IDChanging(int value);
    partial void OnRole_IDChanged();
    #endregion
		
		public UserRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="Role_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._Role_ID = value.ID;
					}
					else
					{
						this._Role_ID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="User_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._User_ID = value.ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
